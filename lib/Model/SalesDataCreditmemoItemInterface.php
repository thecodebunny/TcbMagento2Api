<?php
/**
 * SalesDataCreditmemoItemInterface
 *
 * PHP version 5
 *
 * @category Class
 * @package  TheCodeBunny\Swagger\Magento2\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/thecodebunny/TcbMagento2Api.git
 */

/**
 * Magento Enterprise
 *
 * No description provided (generated by Swagger Codegen https://github.com/thecodebunny/TcbMagento2Api.git)
 *
 * OpenAPI spec version: 2.1
 * 
 * Generated by: https://github.com/thecodebunny/TcbMagento2Api.git.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/thecodebunny/TcbMagento2Api.git
 * Do not edit the class manually.
 */

namespace TheCodeBunny\Magento2Api\Model;

use \ArrayAccess;

/**
 * SalesDataCreditmemoItemInterface Class Doc Comment
 *
 * @category    Class
 * @description Credit memo item interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo item is an invoiced item for which a merchant creates a credit memo.
 * @package     TheCodeBunny\Swagger\Magento2\Client
 * @author      Hemang Vyas (TheCodeBunny)
 * @link        https://github.com/thecodebunny/TcbMagento2Api.git
 */
class SalesDataCreditmemoItemInterface implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'sales-data-creditmemo-item-interface';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'additionalData' => 'string',
        'baseCost' => 'float',
        'baseDiscountAmount' => 'float',
        'baseDiscountTaxCompensationAmount' => 'float',
        'basePrice' => 'float',
        'basePriceInclTax' => 'float',
        'baseRowTotal' => 'float',
        'baseRowTotalInclTax' => 'float',
        'baseTaxAmount' => 'float',
        'baseWeeeTaxAppliedAmount' => 'float',
        'baseWeeeTaxAppliedRowAmnt' => 'float',
        'baseWeeeTaxDisposition' => 'float',
        'baseWeeeTaxRowDisposition' => 'float',
        'description' => 'string',
        'discountAmount' => 'float',
        'entityId' => 'int',
        'discountTaxCompensationAmount' => 'float',
        'name' => 'string',
        'orderItemId' => 'int',
        'parentId' => 'int',
        'price' => 'float',
        'priceInclTax' => 'float',
        'productId' => 'int',
        'qty' => 'float',
        'rowTotal' => 'float',
        'rowTotalInclTax' => 'float',
        'sku' => 'string',
        'taxAmount' => 'float',
        'weeeTaxApplied' => 'string',
        'weeeTaxAppliedAmount' => 'float',
        'weeeTaxAppliedRowAmount' => 'float',
        'weeeTaxDisposition' => 'float',
        'weeeTaxRowDisposition' => 'float',
        'extensionAttributes' => '\TheCodeBunny\Magento2Api\Model\SalesDataCreditmemoItemExtensionInterface'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'additionalData' => 'additional_data',
        'baseCost' => 'base_cost',
        'baseDiscountAmount' => 'base_discount_amount',
        'baseDiscountTaxCompensationAmount' => 'base_discount_tax_compensation_amount',
        'basePrice' => 'base_price',
        'basePriceInclTax' => 'base_price_incl_tax',
        'baseRowTotal' => 'base_row_total',
        'baseRowTotalInclTax' => 'base_row_total_incl_tax',
        'baseTaxAmount' => 'base_tax_amount',
        'baseWeeeTaxAppliedAmount' => 'base_weee_tax_applied_amount',
        'baseWeeeTaxAppliedRowAmnt' => 'base_weee_tax_applied_row_amnt',
        'baseWeeeTaxDisposition' => 'base_weee_tax_disposition',
        'baseWeeeTaxRowDisposition' => 'base_weee_tax_row_disposition',
        'description' => 'description',
        'discountAmount' => 'discount_amount',
        'entityId' => 'entity_id',
        'discountTaxCompensationAmount' => 'discount_tax_compensation_amount',
        'name' => 'name',
        'orderItemId' => 'order_item_id',
        'parentId' => 'parent_id',
        'price' => 'price',
        'priceInclTax' => 'price_incl_tax',
        'productId' => 'product_id',
        'qty' => 'qty',
        'rowTotal' => 'row_total',
        'rowTotalInclTax' => 'row_total_incl_tax',
        'sku' => 'sku',
        'taxAmount' => 'tax_amount',
        'weeeTaxApplied' => 'weee_tax_applied',
        'weeeTaxAppliedAmount' => 'weee_tax_applied_amount',
        'weeeTaxAppliedRowAmount' => 'weee_tax_applied_row_amount',
        'weeeTaxDisposition' => 'weee_tax_disposition',
        'weeeTaxRowDisposition' => 'weee_tax_row_disposition',
        'extensionAttributes' => 'extension_attributes'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'additionalData' => 'setAdditionalData',
        'baseCost' => 'setBaseCost',
        'baseDiscountAmount' => 'setBaseDiscountAmount',
        'baseDiscountTaxCompensationAmount' => 'setBaseDiscountTaxCompensationAmount',
        'basePrice' => 'setBasePrice',
        'basePriceInclTax' => 'setBasePriceInclTax',
        'baseRowTotal' => 'setBaseRowTotal',
        'baseRowTotalInclTax' => 'setBaseRowTotalInclTax',
        'baseTaxAmount' => 'setBaseTaxAmount',
        'baseWeeeTaxAppliedAmount' => 'setBaseWeeeTaxAppliedAmount',
        'baseWeeeTaxAppliedRowAmnt' => 'setBaseWeeeTaxAppliedRowAmnt',
        'baseWeeeTaxDisposition' => 'setBaseWeeeTaxDisposition',
        'baseWeeeTaxRowDisposition' => 'setBaseWeeeTaxRowDisposition',
        'description' => 'setDescription',
        'discountAmount' => 'setDiscountAmount',
        'entityId' => 'setEntityId',
        'discountTaxCompensationAmount' => 'setDiscountTaxCompensationAmount',
        'name' => 'setName',
        'orderItemId' => 'setOrderItemId',
        'parentId' => 'setParentId',
        'price' => 'setPrice',
        'priceInclTax' => 'setPriceInclTax',
        'productId' => 'setProductId',
        'qty' => 'setQty',
        'rowTotal' => 'setRowTotal',
        'rowTotalInclTax' => 'setRowTotalInclTax',
        'sku' => 'setSku',
        'taxAmount' => 'setTaxAmount',
        'weeeTaxApplied' => 'setWeeeTaxApplied',
        'weeeTaxAppliedAmount' => 'setWeeeTaxAppliedAmount',
        'weeeTaxAppliedRowAmount' => 'setWeeeTaxAppliedRowAmount',
        'weeeTaxDisposition' => 'setWeeeTaxDisposition',
        'weeeTaxRowDisposition' => 'setWeeeTaxRowDisposition',
        'extensionAttributes' => 'setExtensionAttributes'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'additionalData' => 'getAdditionalData',
        'baseCost' => 'getBaseCost',
        'baseDiscountAmount' => 'getBaseDiscountAmount',
        'baseDiscountTaxCompensationAmount' => 'getBaseDiscountTaxCompensationAmount',
        'basePrice' => 'getBasePrice',
        'basePriceInclTax' => 'getBasePriceInclTax',
        'baseRowTotal' => 'getBaseRowTotal',
        'baseRowTotalInclTax' => 'getBaseRowTotalInclTax',
        'baseTaxAmount' => 'getBaseTaxAmount',
        'baseWeeeTaxAppliedAmount' => 'getBaseWeeeTaxAppliedAmount',
        'baseWeeeTaxAppliedRowAmnt' => 'getBaseWeeeTaxAppliedRowAmnt',
        'baseWeeeTaxDisposition' => 'getBaseWeeeTaxDisposition',
        'baseWeeeTaxRowDisposition' => 'getBaseWeeeTaxRowDisposition',
        'description' => 'getDescription',
        'discountAmount' => 'getDiscountAmount',
        'entityId' => 'getEntityId',
        'discountTaxCompensationAmount' => 'getDiscountTaxCompensationAmount',
        'name' => 'getName',
        'orderItemId' => 'getOrderItemId',
        'parentId' => 'getParentId',
        'price' => 'getPrice',
        'priceInclTax' => 'getPriceInclTax',
        'productId' => 'getProductId',
        'qty' => 'getQty',
        'rowTotal' => 'getRowTotal',
        'rowTotalInclTax' => 'getRowTotalInclTax',
        'sku' => 'getSku',
        'taxAmount' => 'getTaxAmount',
        'weeeTaxApplied' => 'getWeeeTaxApplied',
        'weeeTaxAppliedAmount' => 'getWeeeTaxAppliedAmount',
        'weeeTaxAppliedRowAmount' => 'getWeeeTaxAppliedRowAmount',
        'weeeTaxDisposition' => 'getWeeeTaxDisposition',
        'weeeTaxRowDisposition' => 'getWeeeTaxRowDisposition',
        'extensionAttributes' => 'getExtensionAttributes'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additionalData'] = isset($data['additionalData']) ? $data['additionalData'] : null;
        $this->container['baseCost'] = isset($data['baseCost']) ? $data['baseCost'] : null;
        $this->container['baseDiscountAmount'] = isset($data['baseDiscountAmount']) ? $data['baseDiscountAmount'] : null;
        $this->container['baseDiscountTaxCompensationAmount'] = isset($data['baseDiscountTaxCompensationAmount']) ? $data['baseDiscountTaxCompensationAmount'] : null;
        $this->container['basePrice'] = isset($data['basePrice']) ? $data['basePrice'] : null;
        $this->container['basePriceInclTax'] = isset($data['basePriceInclTax']) ? $data['basePriceInclTax'] : null;
        $this->container['baseRowTotal'] = isset($data['baseRowTotal']) ? $data['baseRowTotal'] : null;
        $this->container['baseRowTotalInclTax'] = isset($data['baseRowTotalInclTax']) ? $data['baseRowTotalInclTax'] : null;
        $this->container['baseTaxAmount'] = isset($data['baseTaxAmount']) ? $data['baseTaxAmount'] : null;
        $this->container['baseWeeeTaxAppliedAmount'] = isset($data['baseWeeeTaxAppliedAmount']) ? $data['baseWeeeTaxAppliedAmount'] : null;
        $this->container['baseWeeeTaxAppliedRowAmnt'] = isset($data['baseWeeeTaxAppliedRowAmnt']) ? $data['baseWeeeTaxAppliedRowAmnt'] : null;
        $this->container['baseWeeeTaxDisposition'] = isset($data['baseWeeeTaxDisposition']) ? $data['baseWeeeTaxDisposition'] : null;
        $this->container['baseWeeeTaxRowDisposition'] = isset($data['baseWeeeTaxRowDisposition']) ? $data['baseWeeeTaxRowDisposition'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['discountAmount'] = isset($data['discountAmount']) ? $data['discountAmount'] : null;
        $this->container['entityId'] = isset($data['entityId']) ? $data['entityId'] : null;
        $this->container['discountTaxCompensationAmount'] = isset($data['discountTaxCompensationAmount']) ? $data['discountTaxCompensationAmount'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['orderItemId'] = isset($data['orderItemId']) ? $data['orderItemId'] : null;
        $this->container['parentId'] = isset($data['parentId']) ? $data['parentId'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['priceInclTax'] = isset($data['priceInclTax']) ? $data['priceInclTax'] : null;
        $this->container['productId'] = isset($data['productId']) ? $data['productId'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['rowTotal'] = isset($data['rowTotal']) ? $data['rowTotal'] : null;
        $this->container['rowTotalInclTax'] = isset($data['rowTotalInclTax']) ? $data['rowTotalInclTax'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['taxAmount'] = isset($data['taxAmount']) ? $data['taxAmount'] : null;
        $this->container['weeeTaxApplied'] = isset($data['weeeTaxApplied']) ? $data['weeeTaxApplied'] : null;
        $this->container['weeeTaxAppliedAmount'] = isset($data['weeeTaxAppliedAmount']) ? $data['weeeTaxAppliedAmount'] : null;
        $this->container['weeeTaxAppliedRowAmount'] = isset($data['weeeTaxAppliedRowAmount']) ? $data['weeeTaxAppliedRowAmount'] : null;
        $this->container['weeeTaxDisposition'] = isset($data['weeeTaxDisposition']) ? $data['weeeTaxDisposition'] : null;
        $this->container['weeeTaxRowDisposition'] = isset($data['weeeTaxRowDisposition']) ? $data['weeeTaxRowDisposition'] : null;
        $this->container['extensionAttributes'] = isset($data['extensionAttributes']) ? $data['extensionAttributes'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['baseCost'] === null) {
            $invalid_properties[] = "'baseCost' can't be null";
        }
        if ($this->container['basePrice'] === null) {
            $invalid_properties[] = "'basePrice' can't be null";
        }
        if ($this->container['entityId'] === null) {
            $invalid_properties[] = "'entityId' can't be null";
        }
        if ($this->container['orderItemId'] === null) {
            $invalid_properties[] = "'orderItemId' can't be null";
        }
        if ($this->container['qty'] === null) {
            $invalid_properties[] = "'qty' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['baseCost'] === null) {
            return false;
        }
        if ($this->container['basePrice'] === null) {
            return false;
        }
        if ($this->container['entityId'] === null) {
            return false;
        }
        if ($this->container['orderItemId'] === null) {
            return false;
        }
        if ($this->container['qty'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets additionalData
     * @return string
     */
    public function getAdditionalData()
    {
        return $this->container['additionalData'];
    }

    /**
     * Sets additionalData
     * @param string $additionalData Additional data.
     * @return $this
     */
    public function setAdditionalData($additionalData)
    {
        $this->container['additionalData'] = $additionalData;

        return $this;
    }

    /**
     * Gets baseCost
     * @return float
     */
    public function getBaseCost()
    {
        return $this->container['baseCost'];
    }

    /**
     * Sets baseCost
     * @param float $baseCost The base cost for a credit memo item.
     * @return $this
     */
    public function setBaseCost($baseCost)
    {
        $this->container['baseCost'] = $baseCost;

        return $this;
    }

    /**
     * Gets baseDiscountAmount
     * @return float
     */
    public function getBaseDiscountAmount()
    {
        return $this->container['baseDiscountAmount'];
    }

    /**
     * Sets baseDiscountAmount
     * @param float $baseDiscountAmount The base discount amount for a credit memo item.
     * @return $this
     */
    public function setBaseDiscountAmount($baseDiscountAmount)
    {
        $this->container['baseDiscountAmount'] = $baseDiscountAmount;

        return $this;
    }

    /**
     * Gets baseDiscountTaxCompensationAmount
     * @return float
     */
    public function getBaseDiscountTaxCompensationAmount()
    {
        return $this->container['baseDiscountTaxCompensationAmount'];
    }

    /**
     * Sets baseDiscountTaxCompensationAmount
     * @param float $baseDiscountTaxCompensationAmount The base discount tax compensation amount for a credit memo item.
     * @return $this
     */
    public function setBaseDiscountTaxCompensationAmount($baseDiscountTaxCompensationAmount)
    {
        $this->container['baseDiscountTaxCompensationAmount'] = $baseDiscountTaxCompensationAmount;

        return $this;
    }

    /**
     * Gets basePrice
     * @return float
     */
    public function getBasePrice()
    {
        return $this->container['basePrice'];
    }

    /**
     * Sets basePrice
     * @param float $basePrice The base price for a credit memo item.
     * @return $this
     */
    public function setBasePrice($basePrice)
    {
        $this->container['basePrice'] = $basePrice;

        return $this;
    }

    /**
     * Gets basePriceInclTax
     * @return float
     */
    public function getBasePriceInclTax()
    {
        return $this->container['basePriceInclTax'];
    }

    /**
     * Sets basePriceInclTax
     * @param float $basePriceInclTax Base price including tax.
     * @return $this
     */
    public function setBasePriceInclTax($basePriceInclTax)
    {
        $this->container['basePriceInclTax'] = $basePriceInclTax;

        return $this;
    }

    /**
     * Gets baseRowTotal
     * @return float
     */
    public function getBaseRowTotal()
    {
        return $this->container['baseRowTotal'];
    }

    /**
     * Sets baseRowTotal
     * @param float $baseRowTotal Base row total.
     * @return $this
     */
    public function setBaseRowTotal($baseRowTotal)
    {
        $this->container['baseRowTotal'] = $baseRowTotal;

        return $this;
    }

    /**
     * Gets baseRowTotalInclTax
     * @return float
     */
    public function getBaseRowTotalInclTax()
    {
        return $this->container['baseRowTotalInclTax'];
    }

    /**
     * Sets baseRowTotalInclTax
     * @param float $baseRowTotalInclTax Base row total including tax.
     * @return $this
     */
    public function setBaseRowTotalInclTax($baseRowTotalInclTax)
    {
        $this->container['baseRowTotalInclTax'] = $baseRowTotalInclTax;

        return $this;
    }

    /**
     * Gets baseTaxAmount
     * @return float
     */
    public function getBaseTaxAmount()
    {
        return $this->container['baseTaxAmount'];
    }

    /**
     * Sets baseTaxAmount
     * @param float $baseTaxAmount Base tax amount.
     * @return $this
     */
    public function setBaseTaxAmount($baseTaxAmount)
    {
        $this->container['baseTaxAmount'] = $baseTaxAmount;

        return $this;
    }

    /**
     * Gets baseWeeeTaxAppliedAmount
     * @return float
     */
    public function getBaseWeeeTaxAppliedAmount()
    {
        return $this->container['baseWeeeTaxAppliedAmount'];
    }

    /**
     * Sets baseWeeeTaxAppliedAmount
     * @param float $baseWeeeTaxAppliedAmount Base WEEE tax applied amount.
     * @return $this
     */
    public function setBaseWeeeTaxAppliedAmount($baseWeeeTaxAppliedAmount)
    {
        $this->container['baseWeeeTaxAppliedAmount'] = $baseWeeeTaxAppliedAmount;

        return $this;
    }

    /**
     * Gets baseWeeeTaxAppliedRowAmnt
     * @return float
     */
    public function getBaseWeeeTaxAppliedRowAmnt()
    {
        return $this->container['baseWeeeTaxAppliedRowAmnt'];
    }

    /**
     * Sets baseWeeeTaxAppliedRowAmnt
     * @param float $baseWeeeTaxAppliedRowAmnt Base WEEE tax applied row amount.
     * @return $this
     */
    public function setBaseWeeeTaxAppliedRowAmnt($baseWeeeTaxAppliedRowAmnt)
    {
        $this->container['baseWeeeTaxAppliedRowAmnt'] = $baseWeeeTaxAppliedRowAmnt;

        return $this;
    }

    /**
     * Gets baseWeeeTaxDisposition
     * @return float
     */
    public function getBaseWeeeTaxDisposition()
    {
        return $this->container['baseWeeeTaxDisposition'];
    }

    /**
     * Sets baseWeeeTaxDisposition
     * @param float $baseWeeeTaxDisposition Base WEEE tax disposition.
     * @return $this
     */
    public function setBaseWeeeTaxDisposition($baseWeeeTaxDisposition)
    {
        $this->container['baseWeeeTaxDisposition'] = $baseWeeeTaxDisposition;

        return $this;
    }

    /**
     * Gets baseWeeeTaxRowDisposition
     * @return float
     */
    public function getBaseWeeeTaxRowDisposition()
    {
        return $this->container['baseWeeeTaxRowDisposition'];
    }

    /**
     * Sets baseWeeeTaxRowDisposition
     * @param float $baseWeeeTaxRowDisposition Base WEEE tax row disposition.
     * @return $this
     */
    public function setBaseWeeeTaxRowDisposition($baseWeeeTaxRowDisposition)
    {
        $this->container['baseWeeeTaxRowDisposition'] = $baseWeeeTaxRowDisposition;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description Description.
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets discountAmount
     * @return float
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     * @param float $discountAmount Discount amount.
     * @return $this
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets entityId
     * @return int
     */
    public function getEntityId()
    {
        return $this->container['entityId'];
    }

    /**
     * Sets entityId
     * @param int $entityId Credit memo item ID.
     * @return $this
     */
    public function setEntityId($entityId)
    {
        $this->container['entityId'] = $entityId;

        return $this;
    }

    /**
     * Gets discountTaxCompensationAmount
     * @return float
     */
    public function getDiscountTaxCompensationAmount()
    {
        return $this->container['discountTaxCompensationAmount'];
    }

    /**
     * Sets discountTaxCompensationAmount
     * @param float $discountTaxCompensationAmount Discount tax compensation amount.
     * @return $this
     */
    public function setDiscountTaxCompensationAmount($discountTaxCompensationAmount)
    {
        $this->container['discountTaxCompensationAmount'] = $discountTaxCompensationAmount;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name Name.
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets orderItemId
     * @return int
     */
    public function getOrderItemId()
    {
        return $this->container['orderItemId'];
    }

    /**
     * Sets orderItemId
     * @param int $orderItemId Order item ID.
     * @return $this
     */
    public function setOrderItemId($orderItemId)
    {
        $this->container['orderItemId'] = $orderItemId;

        return $this;
    }

    /**
     * Gets parentId
     * @return int
     */
    public function getParentId()
    {
        return $this->container['parentId'];
    }

    /**
     * Sets parentId
     * @param int $parentId Parent ID.
     * @return $this
     */
    public function setParentId($parentId)
    {
        $this->container['parentId'] = $parentId;

        return $this;
    }

    /**
     * Gets price
     * @return float
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     * @param float $price Price.
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceInclTax
     * @return float
     */
    public function getPriceInclTax()
    {
        return $this->container['priceInclTax'];
    }

    /**
     * Sets priceInclTax
     * @param float $priceInclTax Price including tax.
     * @return $this
     */
    public function setPriceInclTax($priceInclTax)
    {
        $this->container['priceInclTax'] = $priceInclTax;

        return $this;
    }

    /**
     * Gets productId
     * @return int
     */
    public function getProductId()
    {
        return $this->container['productId'];
    }

    /**
     * Sets productId
     * @param int $productId Product ID.
     * @return $this
     */
    public function setProductId($productId)
    {
        $this->container['productId'] = $productId;

        return $this;
    }

    /**
     * Gets qty
     * @return float
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     * @param float $qty Quantity.
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets rowTotal
     * @return float
     */
    public function getRowTotal()
    {
        return $this->container['rowTotal'];
    }

    /**
     * Sets rowTotal
     * @param float $rowTotal Row total.
     * @return $this
     */
    public function setRowTotal($rowTotal)
    {
        $this->container['rowTotal'] = $rowTotal;

        return $this;
    }

    /**
     * Gets rowTotalInclTax
     * @return float
     */
    public function getRowTotalInclTax()
    {
        return $this->container['rowTotalInclTax'];
    }

    /**
     * Sets rowTotalInclTax
     * @param float $rowTotalInclTax Row total including tax.
     * @return $this
     */
    public function setRowTotalInclTax($rowTotalInclTax)
    {
        $this->container['rowTotalInclTax'] = $rowTotalInclTax;

        return $this;
    }

    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     * @param string $sku SKU.
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets taxAmount
     * @return float
     */
    public function getTaxAmount()
    {
        return $this->container['taxAmount'];
    }

    /**
     * Sets taxAmount
     * @param float $taxAmount Tax amount.
     * @return $this
     */
    public function setTaxAmount($taxAmount)
    {
        $this->container['taxAmount'] = $taxAmount;

        return $this;
    }

    /**
     * Gets weeeTaxApplied
     * @return string
     */
    public function getWeeeTaxApplied()
    {
        return $this->container['weeeTaxApplied'];
    }

    /**
     * Sets weeeTaxApplied
     * @param string $weeeTaxApplied WEEE tax applied.
     * @return $this
     */
    public function setWeeeTaxApplied($weeeTaxApplied)
    {
        $this->container['weeeTaxApplied'] = $weeeTaxApplied;

        return $this;
    }

    /**
     * Gets weeeTaxAppliedAmount
     * @return float
     */
    public function getWeeeTaxAppliedAmount()
    {
        return $this->container['weeeTaxAppliedAmount'];
    }

    /**
     * Sets weeeTaxAppliedAmount
     * @param float $weeeTaxAppliedAmount WEEE tax applied amount.
     * @return $this
     */
    public function setWeeeTaxAppliedAmount($weeeTaxAppliedAmount)
    {
        $this->container['weeeTaxAppliedAmount'] = $weeeTaxAppliedAmount;

        return $this;
    }

    /**
     * Gets weeeTaxAppliedRowAmount
     * @return float
     */
    public function getWeeeTaxAppliedRowAmount()
    {
        return $this->container['weeeTaxAppliedRowAmount'];
    }

    /**
     * Sets weeeTaxAppliedRowAmount
     * @param float $weeeTaxAppliedRowAmount WEEE tax applied row amount.
     * @return $this
     */
    public function setWeeeTaxAppliedRowAmount($weeeTaxAppliedRowAmount)
    {
        $this->container['weeeTaxAppliedRowAmount'] = $weeeTaxAppliedRowAmount;

        return $this;
    }

    /**
     * Gets weeeTaxDisposition
     * @return float
     */
    public function getWeeeTaxDisposition()
    {
        return $this->container['weeeTaxDisposition'];
    }

    /**
     * Sets weeeTaxDisposition
     * @param float $weeeTaxDisposition WEEE tax disposition.
     * @return $this
     */
    public function setWeeeTaxDisposition($weeeTaxDisposition)
    {
        $this->container['weeeTaxDisposition'] = $weeeTaxDisposition;

        return $this;
    }

    /**
     * Gets weeeTaxRowDisposition
     * @return float
     */
    public function getWeeeTaxRowDisposition()
    {
        return $this->container['weeeTaxRowDisposition'];
    }

    /**
     * Sets weeeTaxRowDisposition
     * @param float $weeeTaxRowDisposition WEEE tax row disposition.
     * @return $this
     */
    public function setWeeeTaxRowDisposition($weeeTaxRowDisposition)
    {
        $this->container['weeeTaxRowDisposition'] = $weeeTaxRowDisposition;

        return $this;
    }

    /**
     * Gets extensionAttributes
     * @return \TheCodeBunny\Magento2Api\Model\SalesDataCreditmemoItemExtensionInterface
     */
    public function getExtensionAttributes()
    {
        return $this->container['extensionAttributes'];
    }

    /**
     * Sets extensionAttributes
     * @param \TheCodeBunny\Magento2Api\Model\SalesDataCreditmemoItemExtensionInterface $extensionAttributes
     * @return $this
     */
    public function setExtensionAttributes($extensionAttributes)
    {
        $this->container['extensionAttributes'] = $extensionAttributes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\TheCodeBunny\Magento2Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\TheCodeBunny\Magento2Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


