<?php
/**
 * SalesDataOrderItemInterface
 *
 * PHP version 5
 *
 * @category Class
 * @package  TheCodeBunny\Swagger\Magento2\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/thecodebunny/TcbMagento2Api.git
 */

/**
 * Magento Enterprise
 *
 * No description provided (generated by Swagger Codegen https://github.com/thecodebunny/TcbMagento2Api.git)
 *
 * OpenAPI spec version: 2.1
 * 
 * Generated by: https://github.com/thecodebunny/TcbMagento2Api.git.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/thecodebunny/TcbMagento2Api.git
 * Do not edit the class manually.
 */

namespace TheCodeBunny\Magento2Api\Model;

use \ArrayAccess;

/**
 * SalesDataOrderItemInterface Class Doc Comment
 *
 * @category    Class
 * @description Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
 * @package     TheCodeBunny\Swagger\Magento2\Client
 * @author      Hemang Vyas (TheCodeBunny)
 * @link        https://github.com/thecodebunny/TcbMagento2Api.git
 */
class SalesDataOrderItemInterface implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'sales-data-order-item-interface';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'additionalData' => 'string',
        'amountRefunded' => 'float',
        'appliedRuleIds' => 'string',
        'baseAmountRefunded' => 'float',
        'baseCost' => 'float',
        'baseDiscountAmount' => 'float',
        'baseDiscountInvoiced' => 'float',
        'baseDiscountRefunded' => 'float',
        'baseDiscountTaxCompensationAmount' => 'float',
        'baseDiscountTaxCompensationInvoiced' => 'float',
        'baseDiscountTaxCompensationRefunded' => 'float',
        'baseOriginalPrice' => 'float',
        'basePrice' => 'float',
        'basePriceInclTax' => 'float',
        'baseRowInvoiced' => 'float',
        'baseRowTotal' => 'float',
        'baseRowTotalInclTax' => 'float',
        'baseTaxAmount' => 'float',
        'baseTaxBeforeDiscount' => 'float',
        'baseTaxInvoiced' => 'float',
        'baseTaxRefunded' => 'float',
        'baseWeeeTaxAppliedAmount' => 'float',
        'baseWeeeTaxAppliedRowAmnt' => 'float',
        'baseWeeeTaxDisposition' => 'float',
        'baseWeeeTaxRowDisposition' => 'float',
        'createdAt' => 'string',
        'description' => 'string',
        'discountAmount' => 'float',
        'discountInvoiced' => 'float',
        'discountPercent' => 'float',
        'discountRefunded' => 'float',
        'eventId' => 'int',
        'extOrderItemId' => 'string',
        'freeShipping' => 'int',
        'gwBasePrice' => 'float',
        'gwBasePriceInvoiced' => 'float',
        'gwBasePriceRefunded' => 'float',
        'gwBaseTaxAmount' => 'float',
        'gwBaseTaxAmountInvoiced' => 'float',
        'gwBaseTaxAmountRefunded' => 'float',
        'gwId' => 'int',
        'gwPrice' => 'float',
        'gwPriceInvoiced' => 'float',
        'gwPriceRefunded' => 'float',
        'gwTaxAmount' => 'float',
        'gwTaxAmountInvoiced' => 'float',
        'gwTaxAmountRefunded' => 'float',
        'discountTaxCompensationAmount' => 'float',
        'discountTaxCompensationCanceled' => 'float',
        'discountTaxCompensationInvoiced' => 'float',
        'discountTaxCompensationRefunded' => 'float',
        'isQtyDecimal' => 'int',
        'isVirtual' => 'int',
        'itemId' => 'int',
        'lockedDoInvoice' => 'int',
        'lockedDoShip' => 'int',
        'name' => 'string',
        'noDiscount' => 'int',
        'orderId' => 'int',
        'originalPrice' => 'float',
        'parentItemId' => 'int',
        'price' => 'float',
        'priceInclTax' => 'float',
        'productId' => 'int',
        'productType' => 'string',
        'qtyBackordered' => 'float',
        'qtyCanceled' => 'float',
        'qtyInvoiced' => 'float',
        'qtyOrdered' => 'float',
        'qtyRefunded' => 'float',
        'qtyReturned' => 'float',
        'qtyShipped' => 'float',
        'quoteItemId' => 'int',
        'rowInvoiced' => 'float',
        'rowTotal' => 'float',
        'rowTotalInclTax' => 'float',
        'rowWeight' => 'float',
        'sku' => 'string',
        'storeId' => 'int',
        'taxAmount' => 'float',
        'taxBeforeDiscount' => 'float',
        'taxCanceled' => 'float',
        'taxInvoiced' => 'float',
        'taxPercent' => 'float',
        'taxRefunded' => 'float',
        'updatedAt' => 'string',
        'weeeTaxApplied' => 'string',
        'weeeTaxAppliedAmount' => 'float',
        'weeeTaxAppliedRowAmount' => 'float',
        'weeeTaxDisposition' => 'float',
        'weeeTaxRowDisposition' => 'float',
        'weight' => 'float',
        'parentItem' => '\TheCodeBunny\Magento2Api\Model\SalesDataOrderItemInterface',
        'productOption' => '\TheCodeBunny\Magento2Api\Model\CatalogDataProductOptionInterface',
        'extensionAttributes' => '\TheCodeBunny\Magento2Api\Model\SalesDataOrderItemExtensionInterface'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'additionalData' => 'additional_data',
        'amountRefunded' => 'amount_refunded',
        'appliedRuleIds' => 'applied_rule_ids',
        'baseAmountRefunded' => 'base_amount_refunded',
        'baseCost' => 'base_cost',
        'baseDiscountAmount' => 'base_discount_amount',
        'baseDiscountInvoiced' => 'base_discount_invoiced',
        'baseDiscountRefunded' => 'base_discount_refunded',
        'baseDiscountTaxCompensationAmount' => 'base_discount_tax_compensation_amount',
        'baseDiscountTaxCompensationInvoiced' => 'base_discount_tax_compensation_invoiced',
        'baseDiscountTaxCompensationRefunded' => 'base_discount_tax_compensation_refunded',
        'baseOriginalPrice' => 'base_original_price',
        'basePrice' => 'base_price',
        'basePriceInclTax' => 'base_price_incl_tax',
        'baseRowInvoiced' => 'base_row_invoiced',
        'baseRowTotal' => 'base_row_total',
        'baseRowTotalInclTax' => 'base_row_total_incl_tax',
        'baseTaxAmount' => 'base_tax_amount',
        'baseTaxBeforeDiscount' => 'base_tax_before_discount',
        'baseTaxInvoiced' => 'base_tax_invoiced',
        'baseTaxRefunded' => 'base_tax_refunded',
        'baseWeeeTaxAppliedAmount' => 'base_weee_tax_applied_amount',
        'baseWeeeTaxAppliedRowAmnt' => 'base_weee_tax_applied_row_amnt',
        'baseWeeeTaxDisposition' => 'base_weee_tax_disposition',
        'baseWeeeTaxRowDisposition' => 'base_weee_tax_row_disposition',
        'createdAt' => 'created_at',
        'description' => 'description',
        'discountAmount' => 'discount_amount',
        'discountInvoiced' => 'discount_invoiced',
        'discountPercent' => 'discount_percent',
        'discountRefunded' => 'discount_refunded',
        'eventId' => 'event_id',
        'extOrderItemId' => 'ext_order_item_id',
        'freeShipping' => 'free_shipping',
        'gwBasePrice' => 'gw_base_price',
        'gwBasePriceInvoiced' => 'gw_base_price_invoiced',
        'gwBasePriceRefunded' => 'gw_base_price_refunded',
        'gwBaseTaxAmount' => 'gw_base_tax_amount',
        'gwBaseTaxAmountInvoiced' => 'gw_base_tax_amount_invoiced',
        'gwBaseTaxAmountRefunded' => 'gw_base_tax_amount_refunded',
        'gwId' => 'gw_id',
        'gwPrice' => 'gw_price',
        'gwPriceInvoiced' => 'gw_price_invoiced',
        'gwPriceRefunded' => 'gw_price_refunded',
        'gwTaxAmount' => 'gw_tax_amount',
        'gwTaxAmountInvoiced' => 'gw_tax_amount_invoiced',
        'gwTaxAmountRefunded' => 'gw_tax_amount_refunded',
        'discountTaxCompensationAmount' => 'discount_tax_compensation_amount',
        'discountTaxCompensationCanceled' => 'discount_tax_compensation_canceled',
        'discountTaxCompensationInvoiced' => 'discount_tax_compensation_invoiced',
        'discountTaxCompensationRefunded' => 'discount_tax_compensation_refunded',
        'isQtyDecimal' => 'is_qty_decimal',
        'isVirtual' => 'is_virtual',
        'itemId' => 'item_id',
        'lockedDoInvoice' => 'locked_do_invoice',
        'lockedDoShip' => 'locked_do_ship',
        'name' => 'name',
        'noDiscount' => 'no_discount',
        'orderId' => 'order_id',
        'originalPrice' => 'original_price',
        'parentItemId' => 'parent_item_id',
        'price' => 'price',
        'priceInclTax' => 'price_incl_tax',
        'productId' => 'product_id',
        'productType' => 'product_type',
        'qtyBackordered' => 'qty_backordered',
        'qtyCanceled' => 'qty_canceled',
        'qtyInvoiced' => 'qty_invoiced',
        'qtyOrdered' => 'qty_ordered',
        'qtyRefunded' => 'qty_refunded',
        'qtyReturned' => 'qty_returned',
        'qtyShipped' => 'qty_shipped',
        'quoteItemId' => 'quote_item_id',
        'rowInvoiced' => 'row_invoiced',
        'rowTotal' => 'row_total',
        'rowTotalInclTax' => 'row_total_incl_tax',
        'rowWeight' => 'row_weight',
        'sku' => 'sku',
        'storeId' => 'store_id',
        'taxAmount' => 'tax_amount',
        'taxBeforeDiscount' => 'tax_before_discount',
        'taxCanceled' => 'tax_canceled',
        'taxInvoiced' => 'tax_invoiced',
        'taxPercent' => 'tax_percent',
        'taxRefunded' => 'tax_refunded',
        'updatedAt' => 'updated_at',
        'weeeTaxApplied' => 'weee_tax_applied',
        'weeeTaxAppliedAmount' => 'weee_tax_applied_amount',
        'weeeTaxAppliedRowAmount' => 'weee_tax_applied_row_amount',
        'weeeTaxDisposition' => 'weee_tax_disposition',
        'weeeTaxRowDisposition' => 'weee_tax_row_disposition',
        'weight' => 'weight',
        'parentItem' => 'parent_item',
        'productOption' => 'product_option',
        'extensionAttributes' => 'extension_attributes'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'additionalData' => 'setAdditionalData',
        'amountRefunded' => 'setAmountRefunded',
        'appliedRuleIds' => 'setAppliedRuleIds',
        'baseAmountRefunded' => 'setBaseAmountRefunded',
        'baseCost' => 'setBaseCost',
        'baseDiscountAmount' => 'setBaseDiscountAmount',
        'baseDiscountInvoiced' => 'setBaseDiscountInvoiced',
        'baseDiscountRefunded' => 'setBaseDiscountRefunded',
        'baseDiscountTaxCompensationAmount' => 'setBaseDiscountTaxCompensationAmount',
        'baseDiscountTaxCompensationInvoiced' => 'setBaseDiscountTaxCompensationInvoiced',
        'baseDiscountTaxCompensationRefunded' => 'setBaseDiscountTaxCompensationRefunded',
        'baseOriginalPrice' => 'setBaseOriginalPrice',
        'basePrice' => 'setBasePrice',
        'basePriceInclTax' => 'setBasePriceInclTax',
        'baseRowInvoiced' => 'setBaseRowInvoiced',
        'baseRowTotal' => 'setBaseRowTotal',
        'baseRowTotalInclTax' => 'setBaseRowTotalInclTax',
        'baseTaxAmount' => 'setBaseTaxAmount',
        'baseTaxBeforeDiscount' => 'setBaseTaxBeforeDiscount',
        'baseTaxInvoiced' => 'setBaseTaxInvoiced',
        'baseTaxRefunded' => 'setBaseTaxRefunded',
        'baseWeeeTaxAppliedAmount' => 'setBaseWeeeTaxAppliedAmount',
        'baseWeeeTaxAppliedRowAmnt' => 'setBaseWeeeTaxAppliedRowAmnt',
        'baseWeeeTaxDisposition' => 'setBaseWeeeTaxDisposition',
        'baseWeeeTaxRowDisposition' => 'setBaseWeeeTaxRowDisposition',
        'createdAt' => 'setCreatedAt',
        'description' => 'setDescription',
        'discountAmount' => 'setDiscountAmount',
        'discountInvoiced' => 'setDiscountInvoiced',
        'discountPercent' => 'setDiscountPercent',
        'discountRefunded' => 'setDiscountRefunded',
        'eventId' => 'setEventId',
        'extOrderItemId' => 'setExtOrderItemId',
        'freeShipping' => 'setFreeShipping',
        'gwBasePrice' => 'setGwBasePrice',
        'gwBasePriceInvoiced' => 'setGwBasePriceInvoiced',
        'gwBasePriceRefunded' => 'setGwBasePriceRefunded',
        'gwBaseTaxAmount' => 'setGwBaseTaxAmount',
        'gwBaseTaxAmountInvoiced' => 'setGwBaseTaxAmountInvoiced',
        'gwBaseTaxAmountRefunded' => 'setGwBaseTaxAmountRefunded',
        'gwId' => 'setGwId',
        'gwPrice' => 'setGwPrice',
        'gwPriceInvoiced' => 'setGwPriceInvoiced',
        'gwPriceRefunded' => 'setGwPriceRefunded',
        'gwTaxAmount' => 'setGwTaxAmount',
        'gwTaxAmountInvoiced' => 'setGwTaxAmountInvoiced',
        'gwTaxAmountRefunded' => 'setGwTaxAmountRefunded',
        'discountTaxCompensationAmount' => 'setDiscountTaxCompensationAmount',
        'discountTaxCompensationCanceled' => 'setDiscountTaxCompensationCanceled',
        'discountTaxCompensationInvoiced' => 'setDiscountTaxCompensationInvoiced',
        'discountTaxCompensationRefunded' => 'setDiscountTaxCompensationRefunded',
        'isQtyDecimal' => 'setIsQtyDecimal',
        'isVirtual' => 'setIsVirtual',
        'itemId' => 'setItemId',
        'lockedDoInvoice' => 'setLockedDoInvoice',
        'lockedDoShip' => 'setLockedDoShip',
        'name' => 'setName',
        'noDiscount' => 'setNoDiscount',
        'orderId' => 'setOrderId',
        'originalPrice' => 'setOriginalPrice',
        'parentItemId' => 'setParentItemId',
        'price' => 'setPrice',
        'priceInclTax' => 'setPriceInclTax',
        'productId' => 'setProductId',
        'productType' => 'setProductType',
        'qtyBackordered' => 'setQtyBackordered',
        'qtyCanceled' => 'setQtyCanceled',
        'qtyInvoiced' => 'setQtyInvoiced',
        'qtyOrdered' => 'setQtyOrdered',
        'qtyRefunded' => 'setQtyRefunded',
        'qtyReturned' => 'setQtyReturned',
        'qtyShipped' => 'setQtyShipped',
        'quoteItemId' => 'setQuoteItemId',
        'rowInvoiced' => 'setRowInvoiced',
        'rowTotal' => 'setRowTotal',
        'rowTotalInclTax' => 'setRowTotalInclTax',
        'rowWeight' => 'setRowWeight',
        'sku' => 'setSku',
        'storeId' => 'setStoreId',
        'taxAmount' => 'setTaxAmount',
        'taxBeforeDiscount' => 'setTaxBeforeDiscount',
        'taxCanceled' => 'setTaxCanceled',
        'taxInvoiced' => 'setTaxInvoiced',
        'taxPercent' => 'setTaxPercent',
        'taxRefunded' => 'setTaxRefunded',
        'updatedAt' => 'setUpdatedAt',
        'weeeTaxApplied' => 'setWeeeTaxApplied',
        'weeeTaxAppliedAmount' => 'setWeeeTaxAppliedAmount',
        'weeeTaxAppliedRowAmount' => 'setWeeeTaxAppliedRowAmount',
        'weeeTaxDisposition' => 'setWeeeTaxDisposition',
        'weeeTaxRowDisposition' => 'setWeeeTaxRowDisposition',
        'weight' => 'setWeight',
        'parentItem' => 'setParentItem',
        'productOption' => 'setProductOption',
        'extensionAttributes' => 'setExtensionAttributes'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'additionalData' => 'getAdditionalData',
        'amountRefunded' => 'getAmountRefunded',
        'appliedRuleIds' => 'getAppliedRuleIds',
        'baseAmountRefunded' => 'getBaseAmountRefunded',
        'baseCost' => 'getBaseCost',
        'baseDiscountAmount' => 'getBaseDiscountAmount',
        'baseDiscountInvoiced' => 'getBaseDiscountInvoiced',
        'baseDiscountRefunded' => 'getBaseDiscountRefunded',
        'baseDiscountTaxCompensationAmount' => 'getBaseDiscountTaxCompensationAmount',
        'baseDiscountTaxCompensationInvoiced' => 'getBaseDiscountTaxCompensationInvoiced',
        'baseDiscountTaxCompensationRefunded' => 'getBaseDiscountTaxCompensationRefunded',
        'baseOriginalPrice' => 'getBaseOriginalPrice',
        'basePrice' => 'getBasePrice',
        'basePriceInclTax' => 'getBasePriceInclTax',
        'baseRowInvoiced' => 'getBaseRowInvoiced',
        'baseRowTotal' => 'getBaseRowTotal',
        'baseRowTotalInclTax' => 'getBaseRowTotalInclTax',
        'baseTaxAmount' => 'getBaseTaxAmount',
        'baseTaxBeforeDiscount' => 'getBaseTaxBeforeDiscount',
        'baseTaxInvoiced' => 'getBaseTaxInvoiced',
        'baseTaxRefunded' => 'getBaseTaxRefunded',
        'baseWeeeTaxAppliedAmount' => 'getBaseWeeeTaxAppliedAmount',
        'baseWeeeTaxAppliedRowAmnt' => 'getBaseWeeeTaxAppliedRowAmnt',
        'baseWeeeTaxDisposition' => 'getBaseWeeeTaxDisposition',
        'baseWeeeTaxRowDisposition' => 'getBaseWeeeTaxRowDisposition',
        'createdAt' => 'getCreatedAt',
        'description' => 'getDescription',
        'discountAmount' => 'getDiscountAmount',
        'discountInvoiced' => 'getDiscountInvoiced',
        'discountPercent' => 'getDiscountPercent',
        'discountRefunded' => 'getDiscountRefunded',
        'eventId' => 'getEventId',
        'extOrderItemId' => 'getExtOrderItemId',
        'freeShipping' => 'getFreeShipping',
        'gwBasePrice' => 'getGwBasePrice',
        'gwBasePriceInvoiced' => 'getGwBasePriceInvoiced',
        'gwBasePriceRefunded' => 'getGwBasePriceRefunded',
        'gwBaseTaxAmount' => 'getGwBaseTaxAmount',
        'gwBaseTaxAmountInvoiced' => 'getGwBaseTaxAmountInvoiced',
        'gwBaseTaxAmountRefunded' => 'getGwBaseTaxAmountRefunded',
        'gwId' => 'getGwId',
        'gwPrice' => 'getGwPrice',
        'gwPriceInvoiced' => 'getGwPriceInvoiced',
        'gwPriceRefunded' => 'getGwPriceRefunded',
        'gwTaxAmount' => 'getGwTaxAmount',
        'gwTaxAmountInvoiced' => 'getGwTaxAmountInvoiced',
        'gwTaxAmountRefunded' => 'getGwTaxAmountRefunded',
        'discountTaxCompensationAmount' => 'getDiscountTaxCompensationAmount',
        'discountTaxCompensationCanceled' => 'getDiscountTaxCompensationCanceled',
        'discountTaxCompensationInvoiced' => 'getDiscountTaxCompensationInvoiced',
        'discountTaxCompensationRefunded' => 'getDiscountTaxCompensationRefunded',
        'isQtyDecimal' => 'getIsQtyDecimal',
        'isVirtual' => 'getIsVirtual',
        'itemId' => 'getItemId',
        'lockedDoInvoice' => 'getLockedDoInvoice',
        'lockedDoShip' => 'getLockedDoShip',
        'name' => 'getName',
        'noDiscount' => 'getNoDiscount',
        'orderId' => 'getOrderId',
        'originalPrice' => 'getOriginalPrice',
        'parentItemId' => 'getParentItemId',
        'price' => 'getPrice',
        'priceInclTax' => 'getPriceInclTax',
        'productId' => 'getProductId',
        'productType' => 'getProductType',
        'qtyBackordered' => 'getQtyBackordered',
        'qtyCanceled' => 'getQtyCanceled',
        'qtyInvoiced' => 'getQtyInvoiced',
        'qtyOrdered' => 'getQtyOrdered',
        'qtyRefunded' => 'getQtyRefunded',
        'qtyReturned' => 'getQtyReturned',
        'qtyShipped' => 'getQtyShipped',
        'quoteItemId' => 'getQuoteItemId',
        'rowInvoiced' => 'getRowInvoiced',
        'rowTotal' => 'getRowTotal',
        'rowTotalInclTax' => 'getRowTotalInclTax',
        'rowWeight' => 'getRowWeight',
        'sku' => 'getSku',
        'storeId' => 'getStoreId',
        'taxAmount' => 'getTaxAmount',
        'taxBeforeDiscount' => 'getTaxBeforeDiscount',
        'taxCanceled' => 'getTaxCanceled',
        'taxInvoiced' => 'getTaxInvoiced',
        'taxPercent' => 'getTaxPercent',
        'taxRefunded' => 'getTaxRefunded',
        'updatedAt' => 'getUpdatedAt',
        'weeeTaxApplied' => 'getWeeeTaxApplied',
        'weeeTaxAppliedAmount' => 'getWeeeTaxAppliedAmount',
        'weeeTaxAppliedRowAmount' => 'getWeeeTaxAppliedRowAmount',
        'weeeTaxDisposition' => 'getWeeeTaxDisposition',
        'weeeTaxRowDisposition' => 'getWeeeTaxRowDisposition',
        'weight' => 'getWeight',
        'parentItem' => 'getParentItem',
        'productOption' => 'getProductOption',
        'extensionAttributes' => 'getExtensionAttributes'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additionalData'] = isset($data['additionalData']) ? $data['additionalData'] : null;
        $this->container['amountRefunded'] = isset($data['amountRefunded']) ? $data['amountRefunded'] : null;
        $this->container['appliedRuleIds'] = isset($data['appliedRuleIds']) ? $data['appliedRuleIds'] : null;
        $this->container['baseAmountRefunded'] = isset($data['baseAmountRefunded']) ? $data['baseAmountRefunded'] : null;
        $this->container['baseCost'] = isset($data['baseCost']) ? $data['baseCost'] : null;
        $this->container['baseDiscountAmount'] = isset($data['baseDiscountAmount']) ? $data['baseDiscountAmount'] : null;
        $this->container['baseDiscountInvoiced'] = isset($data['baseDiscountInvoiced']) ? $data['baseDiscountInvoiced'] : null;
        $this->container['baseDiscountRefunded'] = isset($data['baseDiscountRefunded']) ? $data['baseDiscountRefunded'] : null;
        $this->container['baseDiscountTaxCompensationAmount'] = isset($data['baseDiscountTaxCompensationAmount']) ? $data['baseDiscountTaxCompensationAmount'] : null;
        $this->container['baseDiscountTaxCompensationInvoiced'] = isset($data['baseDiscountTaxCompensationInvoiced']) ? $data['baseDiscountTaxCompensationInvoiced'] : null;
        $this->container['baseDiscountTaxCompensationRefunded'] = isset($data['baseDiscountTaxCompensationRefunded']) ? $data['baseDiscountTaxCompensationRefunded'] : null;
        $this->container['baseOriginalPrice'] = isset($data['baseOriginalPrice']) ? $data['baseOriginalPrice'] : null;
        $this->container['basePrice'] = isset($data['basePrice']) ? $data['basePrice'] : null;
        $this->container['basePriceInclTax'] = isset($data['basePriceInclTax']) ? $data['basePriceInclTax'] : null;
        $this->container['baseRowInvoiced'] = isset($data['baseRowInvoiced']) ? $data['baseRowInvoiced'] : null;
        $this->container['baseRowTotal'] = isset($data['baseRowTotal']) ? $data['baseRowTotal'] : null;
        $this->container['baseRowTotalInclTax'] = isset($data['baseRowTotalInclTax']) ? $data['baseRowTotalInclTax'] : null;
        $this->container['baseTaxAmount'] = isset($data['baseTaxAmount']) ? $data['baseTaxAmount'] : null;
        $this->container['baseTaxBeforeDiscount'] = isset($data['baseTaxBeforeDiscount']) ? $data['baseTaxBeforeDiscount'] : null;
        $this->container['baseTaxInvoiced'] = isset($data['baseTaxInvoiced']) ? $data['baseTaxInvoiced'] : null;
        $this->container['baseTaxRefunded'] = isset($data['baseTaxRefunded']) ? $data['baseTaxRefunded'] : null;
        $this->container['baseWeeeTaxAppliedAmount'] = isset($data['baseWeeeTaxAppliedAmount']) ? $data['baseWeeeTaxAppliedAmount'] : null;
        $this->container['baseWeeeTaxAppliedRowAmnt'] = isset($data['baseWeeeTaxAppliedRowAmnt']) ? $data['baseWeeeTaxAppliedRowAmnt'] : null;
        $this->container['baseWeeeTaxDisposition'] = isset($data['baseWeeeTaxDisposition']) ? $data['baseWeeeTaxDisposition'] : null;
        $this->container['baseWeeeTaxRowDisposition'] = isset($data['baseWeeeTaxRowDisposition']) ? $data['baseWeeeTaxRowDisposition'] : null;
        $this->container['createdAt'] = isset($data['createdAt']) ? $data['createdAt'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['discountAmount'] = isset($data['discountAmount']) ? $data['discountAmount'] : null;
        $this->container['discountInvoiced'] = isset($data['discountInvoiced']) ? $data['discountInvoiced'] : null;
        $this->container['discountPercent'] = isset($data['discountPercent']) ? $data['discountPercent'] : null;
        $this->container['discountRefunded'] = isset($data['discountRefunded']) ? $data['discountRefunded'] : null;
        $this->container['eventId'] = isset($data['eventId']) ? $data['eventId'] : null;
        $this->container['extOrderItemId'] = isset($data['extOrderItemId']) ? $data['extOrderItemId'] : null;
        $this->container['freeShipping'] = isset($data['freeShipping']) ? $data['freeShipping'] : null;
        $this->container['gwBasePrice'] = isset($data['gwBasePrice']) ? $data['gwBasePrice'] : null;
        $this->container['gwBasePriceInvoiced'] = isset($data['gwBasePriceInvoiced']) ? $data['gwBasePriceInvoiced'] : null;
        $this->container['gwBasePriceRefunded'] = isset($data['gwBasePriceRefunded']) ? $data['gwBasePriceRefunded'] : null;
        $this->container['gwBaseTaxAmount'] = isset($data['gwBaseTaxAmount']) ? $data['gwBaseTaxAmount'] : null;
        $this->container['gwBaseTaxAmountInvoiced'] = isset($data['gwBaseTaxAmountInvoiced']) ? $data['gwBaseTaxAmountInvoiced'] : null;
        $this->container['gwBaseTaxAmountRefunded'] = isset($data['gwBaseTaxAmountRefunded']) ? $data['gwBaseTaxAmountRefunded'] : null;
        $this->container['gwId'] = isset($data['gwId']) ? $data['gwId'] : null;
        $this->container['gwPrice'] = isset($data['gwPrice']) ? $data['gwPrice'] : null;
        $this->container['gwPriceInvoiced'] = isset($data['gwPriceInvoiced']) ? $data['gwPriceInvoiced'] : null;
        $this->container['gwPriceRefunded'] = isset($data['gwPriceRefunded']) ? $data['gwPriceRefunded'] : null;
        $this->container['gwTaxAmount'] = isset($data['gwTaxAmount']) ? $data['gwTaxAmount'] : null;
        $this->container['gwTaxAmountInvoiced'] = isset($data['gwTaxAmountInvoiced']) ? $data['gwTaxAmountInvoiced'] : null;
        $this->container['gwTaxAmountRefunded'] = isset($data['gwTaxAmountRefunded']) ? $data['gwTaxAmountRefunded'] : null;
        $this->container['discountTaxCompensationAmount'] = isset($data['discountTaxCompensationAmount']) ? $data['discountTaxCompensationAmount'] : null;
        $this->container['discountTaxCompensationCanceled'] = isset($data['discountTaxCompensationCanceled']) ? $data['discountTaxCompensationCanceled'] : null;
        $this->container['discountTaxCompensationInvoiced'] = isset($data['discountTaxCompensationInvoiced']) ? $data['discountTaxCompensationInvoiced'] : null;
        $this->container['discountTaxCompensationRefunded'] = isset($data['discountTaxCompensationRefunded']) ? $data['discountTaxCompensationRefunded'] : null;
        $this->container['isQtyDecimal'] = isset($data['isQtyDecimal']) ? $data['isQtyDecimal'] : null;
        $this->container['isVirtual'] = isset($data['isVirtual']) ? $data['isVirtual'] : null;
        $this->container['itemId'] = isset($data['itemId']) ? $data['itemId'] : null;
        $this->container['lockedDoInvoice'] = isset($data['lockedDoInvoice']) ? $data['lockedDoInvoice'] : null;
        $this->container['lockedDoShip'] = isset($data['lockedDoShip']) ? $data['lockedDoShip'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['noDiscount'] = isset($data['noDiscount']) ? $data['noDiscount'] : null;
        $this->container['orderId'] = isset($data['orderId']) ? $data['orderId'] : null;
        $this->container['originalPrice'] = isset($data['originalPrice']) ? $data['originalPrice'] : null;
        $this->container['parentItemId'] = isset($data['parentItemId']) ? $data['parentItemId'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['priceInclTax'] = isset($data['priceInclTax']) ? $data['priceInclTax'] : null;
        $this->container['productId'] = isset($data['productId']) ? $data['productId'] : null;
        $this->container['productType'] = isset($data['productType']) ? $data['productType'] : null;
        $this->container['qtyBackordered'] = isset($data['qtyBackordered']) ? $data['qtyBackordered'] : null;
        $this->container['qtyCanceled'] = isset($data['qtyCanceled']) ? $data['qtyCanceled'] : null;
        $this->container['qtyInvoiced'] = isset($data['qtyInvoiced']) ? $data['qtyInvoiced'] : null;
        $this->container['qtyOrdered'] = isset($data['qtyOrdered']) ? $data['qtyOrdered'] : null;
        $this->container['qtyRefunded'] = isset($data['qtyRefunded']) ? $data['qtyRefunded'] : null;
        $this->container['qtyReturned'] = isset($data['qtyReturned']) ? $data['qtyReturned'] : null;
        $this->container['qtyShipped'] = isset($data['qtyShipped']) ? $data['qtyShipped'] : null;
        $this->container['quoteItemId'] = isset($data['quoteItemId']) ? $data['quoteItemId'] : null;
        $this->container['rowInvoiced'] = isset($data['rowInvoiced']) ? $data['rowInvoiced'] : null;
        $this->container['rowTotal'] = isset($data['rowTotal']) ? $data['rowTotal'] : null;
        $this->container['rowTotalInclTax'] = isset($data['rowTotalInclTax']) ? $data['rowTotalInclTax'] : null;
        $this->container['rowWeight'] = isset($data['rowWeight']) ? $data['rowWeight'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['storeId'] = isset($data['storeId']) ? $data['storeId'] : null;
        $this->container['taxAmount'] = isset($data['taxAmount']) ? $data['taxAmount'] : null;
        $this->container['taxBeforeDiscount'] = isset($data['taxBeforeDiscount']) ? $data['taxBeforeDiscount'] : null;
        $this->container['taxCanceled'] = isset($data['taxCanceled']) ? $data['taxCanceled'] : null;
        $this->container['taxInvoiced'] = isset($data['taxInvoiced']) ? $data['taxInvoiced'] : null;
        $this->container['taxPercent'] = isset($data['taxPercent']) ? $data['taxPercent'] : null;
        $this->container['taxRefunded'] = isset($data['taxRefunded']) ? $data['taxRefunded'] : null;
        $this->container['updatedAt'] = isset($data['updatedAt']) ? $data['updatedAt'] : null;
        $this->container['weeeTaxApplied'] = isset($data['weeeTaxApplied']) ? $data['weeeTaxApplied'] : null;
        $this->container['weeeTaxAppliedAmount'] = isset($data['weeeTaxAppliedAmount']) ? $data['weeeTaxAppliedAmount'] : null;
        $this->container['weeeTaxAppliedRowAmount'] = isset($data['weeeTaxAppliedRowAmount']) ? $data['weeeTaxAppliedRowAmount'] : null;
        $this->container['weeeTaxDisposition'] = isset($data['weeeTaxDisposition']) ? $data['weeeTaxDisposition'] : null;
        $this->container['weeeTaxRowDisposition'] = isset($data['weeeTaxRowDisposition']) ? $data['weeeTaxRowDisposition'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['parentItem'] = isset($data['parentItem']) ? $data['parentItem'] : null;
        $this->container['productOption'] = isset($data['productOption']) ? $data['productOption'] : null;
        $this->container['extensionAttributes'] = isset($data['extensionAttributes']) ? $data['extensionAttributes'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['sku'] === null) {
            $invalid_properties[] = "'sku' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['sku'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets additionalData
     * @return string
     */
    public function getAdditionalData()
    {
        return $this->container['additionalData'];
    }

    /**
     * Sets additionalData
     * @param string $additionalData Additional data.
     * @return $this
     */
    public function setAdditionalData($additionalData)
    {
        $this->container['additionalData'] = $additionalData;

        return $this;
    }

    /**
     * Gets amountRefunded
     * @return float
     */
    public function getAmountRefunded()
    {
        return $this->container['amountRefunded'];
    }

    /**
     * Sets amountRefunded
     * @param float $amountRefunded Amount refunded.
     * @return $this
     */
    public function setAmountRefunded($amountRefunded)
    {
        $this->container['amountRefunded'] = $amountRefunded;

        return $this;
    }

    /**
     * Gets appliedRuleIds
     * @return string
     */
    public function getAppliedRuleIds()
    {
        return $this->container['appliedRuleIds'];
    }

    /**
     * Sets appliedRuleIds
     * @param string $appliedRuleIds Applied rule IDs.
     * @return $this
     */
    public function setAppliedRuleIds($appliedRuleIds)
    {
        $this->container['appliedRuleIds'] = $appliedRuleIds;

        return $this;
    }

    /**
     * Gets baseAmountRefunded
     * @return float
     */
    public function getBaseAmountRefunded()
    {
        return $this->container['baseAmountRefunded'];
    }

    /**
     * Sets baseAmountRefunded
     * @param float $baseAmountRefunded Base amount refunded.
     * @return $this
     */
    public function setBaseAmountRefunded($baseAmountRefunded)
    {
        $this->container['baseAmountRefunded'] = $baseAmountRefunded;

        return $this;
    }

    /**
     * Gets baseCost
     * @return float
     */
    public function getBaseCost()
    {
        return $this->container['baseCost'];
    }

    /**
     * Sets baseCost
     * @param float $baseCost Base cost.
     * @return $this
     */
    public function setBaseCost($baseCost)
    {
        $this->container['baseCost'] = $baseCost;

        return $this;
    }

    /**
     * Gets baseDiscountAmount
     * @return float
     */
    public function getBaseDiscountAmount()
    {
        return $this->container['baseDiscountAmount'];
    }

    /**
     * Sets baseDiscountAmount
     * @param float $baseDiscountAmount Base discount amount.
     * @return $this
     */
    public function setBaseDiscountAmount($baseDiscountAmount)
    {
        $this->container['baseDiscountAmount'] = $baseDiscountAmount;

        return $this;
    }

    /**
     * Gets baseDiscountInvoiced
     * @return float
     */
    public function getBaseDiscountInvoiced()
    {
        return $this->container['baseDiscountInvoiced'];
    }

    /**
     * Sets baseDiscountInvoiced
     * @param float $baseDiscountInvoiced Base discount invoiced.
     * @return $this
     */
    public function setBaseDiscountInvoiced($baseDiscountInvoiced)
    {
        $this->container['baseDiscountInvoiced'] = $baseDiscountInvoiced;

        return $this;
    }

    /**
     * Gets baseDiscountRefunded
     * @return float
     */
    public function getBaseDiscountRefunded()
    {
        return $this->container['baseDiscountRefunded'];
    }

    /**
     * Sets baseDiscountRefunded
     * @param float $baseDiscountRefunded Base discount refunded.
     * @return $this
     */
    public function setBaseDiscountRefunded($baseDiscountRefunded)
    {
        $this->container['baseDiscountRefunded'] = $baseDiscountRefunded;

        return $this;
    }

    /**
     * Gets baseDiscountTaxCompensationAmount
     * @return float
     */
    public function getBaseDiscountTaxCompensationAmount()
    {
        return $this->container['baseDiscountTaxCompensationAmount'];
    }

    /**
     * Sets baseDiscountTaxCompensationAmount
     * @param float $baseDiscountTaxCompensationAmount Base discount tax compensation amount.
     * @return $this
     */
    public function setBaseDiscountTaxCompensationAmount($baseDiscountTaxCompensationAmount)
    {
        $this->container['baseDiscountTaxCompensationAmount'] = $baseDiscountTaxCompensationAmount;

        return $this;
    }

    /**
     * Gets baseDiscountTaxCompensationInvoiced
     * @return float
     */
    public function getBaseDiscountTaxCompensationInvoiced()
    {
        return $this->container['baseDiscountTaxCompensationInvoiced'];
    }

    /**
     * Sets baseDiscountTaxCompensationInvoiced
     * @param float $baseDiscountTaxCompensationInvoiced Base discount tax compensation invoiced.
     * @return $this
     */
    public function setBaseDiscountTaxCompensationInvoiced($baseDiscountTaxCompensationInvoiced)
    {
        $this->container['baseDiscountTaxCompensationInvoiced'] = $baseDiscountTaxCompensationInvoiced;

        return $this;
    }

    /**
     * Gets baseDiscountTaxCompensationRefunded
     * @return float
     */
    public function getBaseDiscountTaxCompensationRefunded()
    {
        return $this->container['baseDiscountTaxCompensationRefunded'];
    }

    /**
     * Sets baseDiscountTaxCompensationRefunded
     * @param float $baseDiscountTaxCompensationRefunded Base discount tax compensation refunded.
     * @return $this
     */
    public function setBaseDiscountTaxCompensationRefunded($baseDiscountTaxCompensationRefunded)
    {
        $this->container['baseDiscountTaxCompensationRefunded'] = $baseDiscountTaxCompensationRefunded;

        return $this;
    }

    /**
     * Gets baseOriginalPrice
     * @return float
     */
    public function getBaseOriginalPrice()
    {
        return $this->container['baseOriginalPrice'];
    }

    /**
     * Sets baseOriginalPrice
     * @param float $baseOriginalPrice Base original price.
     * @return $this
     */
    public function setBaseOriginalPrice($baseOriginalPrice)
    {
        $this->container['baseOriginalPrice'] = $baseOriginalPrice;

        return $this;
    }

    /**
     * Gets basePrice
     * @return float
     */
    public function getBasePrice()
    {
        return $this->container['basePrice'];
    }

    /**
     * Sets basePrice
     * @param float $basePrice Base price.
     * @return $this
     */
    public function setBasePrice($basePrice)
    {
        $this->container['basePrice'] = $basePrice;

        return $this;
    }

    /**
     * Gets basePriceInclTax
     * @return float
     */
    public function getBasePriceInclTax()
    {
        return $this->container['basePriceInclTax'];
    }

    /**
     * Sets basePriceInclTax
     * @param float $basePriceInclTax Base price including tax.
     * @return $this
     */
    public function setBasePriceInclTax($basePriceInclTax)
    {
        $this->container['basePriceInclTax'] = $basePriceInclTax;

        return $this;
    }

    /**
     * Gets baseRowInvoiced
     * @return float
     */
    public function getBaseRowInvoiced()
    {
        return $this->container['baseRowInvoiced'];
    }

    /**
     * Sets baseRowInvoiced
     * @param float $baseRowInvoiced Base row invoiced.
     * @return $this
     */
    public function setBaseRowInvoiced($baseRowInvoiced)
    {
        $this->container['baseRowInvoiced'] = $baseRowInvoiced;

        return $this;
    }

    /**
     * Gets baseRowTotal
     * @return float
     */
    public function getBaseRowTotal()
    {
        return $this->container['baseRowTotal'];
    }

    /**
     * Sets baseRowTotal
     * @param float $baseRowTotal Base row total.
     * @return $this
     */
    public function setBaseRowTotal($baseRowTotal)
    {
        $this->container['baseRowTotal'] = $baseRowTotal;

        return $this;
    }

    /**
     * Gets baseRowTotalInclTax
     * @return float
     */
    public function getBaseRowTotalInclTax()
    {
        return $this->container['baseRowTotalInclTax'];
    }

    /**
     * Sets baseRowTotalInclTax
     * @param float $baseRowTotalInclTax Base row total including tax.
     * @return $this
     */
    public function setBaseRowTotalInclTax($baseRowTotalInclTax)
    {
        $this->container['baseRowTotalInclTax'] = $baseRowTotalInclTax;

        return $this;
    }

    /**
     * Gets baseTaxAmount
     * @return float
     */
    public function getBaseTaxAmount()
    {
        return $this->container['baseTaxAmount'];
    }

    /**
     * Sets baseTaxAmount
     * @param float $baseTaxAmount Base tax amount.
     * @return $this
     */
    public function setBaseTaxAmount($baseTaxAmount)
    {
        $this->container['baseTaxAmount'] = $baseTaxAmount;

        return $this;
    }

    /**
     * Gets baseTaxBeforeDiscount
     * @return float
     */
    public function getBaseTaxBeforeDiscount()
    {
        return $this->container['baseTaxBeforeDiscount'];
    }

    /**
     * Sets baseTaxBeforeDiscount
     * @param float $baseTaxBeforeDiscount Base tax before discount.
     * @return $this
     */
    public function setBaseTaxBeforeDiscount($baseTaxBeforeDiscount)
    {
        $this->container['baseTaxBeforeDiscount'] = $baseTaxBeforeDiscount;

        return $this;
    }

    /**
     * Gets baseTaxInvoiced
     * @return float
     */
    public function getBaseTaxInvoiced()
    {
        return $this->container['baseTaxInvoiced'];
    }

    /**
     * Sets baseTaxInvoiced
     * @param float $baseTaxInvoiced Base tax invoiced.
     * @return $this
     */
    public function setBaseTaxInvoiced($baseTaxInvoiced)
    {
        $this->container['baseTaxInvoiced'] = $baseTaxInvoiced;

        return $this;
    }

    /**
     * Gets baseTaxRefunded
     * @return float
     */
    public function getBaseTaxRefunded()
    {
        return $this->container['baseTaxRefunded'];
    }

    /**
     * Sets baseTaxRefunded
     * @param float $baseTaxRefunded Base tax refunded.
     * @return $this
     */
    public function setBaseTaxRefunded($baseTaxRefunded)
    {
        $this->container['baseTaxRefunded'] = $baseTaxRefunded;

        return $this;
    }

    /**
     * Gets baseWeeeTaxAppliedAmount
     * @return float
     */
    public function getBaseWeeeTaxAppliedAmount()
    {
        return $this->container['baseWeeeTaxAppliedAmount'];
    }

    /**
     * Sets baseWeeeTaxAppliedAmount
     * @param float $baseWeeeTaxAppliedAmount Base WEEE tax applied amount.
     * @return $this
     */
    public function setBaseWeeeTaxAppliedAmount($baseWeeeTaxAppliedAmount)
    {
        $this->container['baseWeeeTaxAppliedAmount'] = $baseWeeeTaxAppliedAmount;

        return $this;
    }

    /**
     * Gets baseWeeeTaxAppliedRowAmnt
     * @return float
     */
    public function getBaseWeeeTaxAppliedRowAmnt()
    {
        return $this->container['baseWeeeTaxAppliedRowAmnt'];
    }

    /**
     * Sets baseWeeeTaxAppliedRowAmnt
     * @param float $baseWeeeTaxAppliedRowAmnt Base WEEE tax applied row amount.
     * @return $this
     */
    public function setBaseWeeeTaxAppliedRowAmnt($baseWeeeTaxAppliedRowAmnt)
    {
        $this->container['baseWeeeTaxAppliedRowAmnt'] = $baseWeeeTaxAppliedRowAmnt;

        return $this;
    }

    /**
     * Gets baseWeeeTaxDisposition
     * @return float
     */
    public function getBaseWeeeTaxDisposition()
    {
        return $this->container['baseWeeeTaxDisposition'];
    }

    /**
     * Sets baseWeeeTaxDisposition
     * @param float $baseWeeeTaxDisposition Base WEEE tax disposition.
     * @return $this
     */
    public function setBaseWeeeTaxDisposition($baseWeeeTaxDisposition)
    {
        $this->container['baseWeeeTaxDisposition'] = $baseWeeeTaxDisposition;

        return $this;
    }

    /**
     * Gets baseWeeeTaxRowDisposition
     * @return float
     */
    public function getBaseWeeeTaxRowDisposition()
    {
        return $this->container['baseWeeeTaxRowDisposition'];
    }

    /**
     * Sets baseWeeeTaxRowDisposition
     * @param float $baseWeeeTaxRowDisposition Base WEEE tax row disposition.
     * @return $this
     */
    public function setBaseWeeeTaxRowDisposition($baseWeeeTaxRowDisposition)
    {
        $this->container['baseWeeeTaxRowDisposition'] = $baseWeeeTaxRowDisposition;

        return $this;
    }

    /**
     * Gets createdAt
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     * @param string $createdAt Created-at timestamp.
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description Description.
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets discountAmount
     * @return float
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     * @param float $discountAmount Discount amount.
     * @return $this
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets discountInvoiced
     * @return float
     */
    public function getDiscountInvoiced()
    {
        return $this->container['discountInvoiced'];
    }

    /**
     * Sets discountInvoiced
     * @param float $discountInvoiced Discount invoiced.
     * @return $this
     */
    public function setDiscountInvoiced($discountInvoiced)
    {
        $this->container['discountInvoiced'] = $discountInvoiced;

        return $this;
    }

    /**
     * Gets discountPercent
     * @return float
     */
    public function getDiscountPercent()
    {
        return $this->container['discountPercent'];
    }

    /**
     * Sets discountPercent
     * @param float $discountPercent Discount percent.
     * @return $this
     */
    public function setDiscountPercent($discountPercent)
    {
        $this->container['discountPercent'] = $discountPercent;

        return $this;
    }

    /**
     * Gets discountRefunded
     * @return float
     */
    public function getDiscountRefunded()
    {
        return $this->container['discountRefunded'];
    }

    /**
     * Sets discountRefunded
     * @param float $discountRefunded Discount refunded.
     * @return $this
     */
    public function setDiscountRefunded($discountRefunded)
    {
        $this->container['discountRefunded'] = $discountRefunded;

        return $this;
    }

    /**
     * Gets eventId
     * @return int
     */
    public function getEventId()
    {
        return $this->container['eventId'];
    }

    /**
     * Sets eventId
     * @param int $eventId Event ID.
     * @return $this
     */
    public function setEventId($eventId)
    {
        $this->container['eventId'] = $eventId;

        return $this;
    }

    /**
     * Gets extOrderItemId
     * @return string
     */
    public function getExtOrderItemId()
    {
        return $this->container['extOrderItemId'];
    }

    /**
     * Sets extOrderItemId
     * @param string $extOrderItemId External order item ID.
     * @return $this
     */
    public function setExtOrderItemId($extOrderItemId)
    {
        $this->container['extOrderItemId'] = $extOrderItemId;

        return $this;
    }

    /**
     * Gets freeShipping
     * @return int
     */
    public function getFreeShipping()
    {
        return $this->container['freeShipping'];
    }

    /**
     * Sets freeShipping
     * @param int $freeShipping Free-shipping flag value.
     * @return $this
     */
    public function setFreeShipping($freeShipping)
    {
        $this->container['freeShipping'] = $freeShipping;

        return $this;
    }

    /**
     * Gets gwBasePrice
     * @return float
     */
    public function getGwBasePrice()
    {
        return $this->container['gwBasePrice'];
    }

    /**
     * Sets gwBasePrice
     * @param float $gwBasePrice GW base price.
     * @return $this
     */
    public function setGwBasePrice($gwBasePrice)
    {
        $this->container['gwBasePrice'] = $gwBasePrice;

        return $this;
    }

    /**
     * Gets gwBasePriceInvoiced
     * @return float
     */
    public function getGwBasePriceInvoiced()
    {
        return $this->container['gwBasePriceInvoiced'];
    }

    /**
     * Sets gwBasePriceInvoiced
     * @param float $gwBasePriceInvoiced GW base price invoiced.
     * @return $this
     */
    public function setGwBasePriceInvoiced($gwBasePriceInvoiced)
    {
        $this->container['gwBasePriceInvoiced'] = $gwBasePriceInvoiced;

        return $this;
    }

    /**
     * Gets gwBasePriceRefunded
     * @return float
     */
    public function getGwBasePriceRefunded()
    {
        return $this->container['gwBasePriceRefunded'];
    }

    /**
     * Sets gwBasePriceRefunded
     * @param float $gwBasePriceRefunded GW base price refunded.
     * @return $this
     */
    public function setGwBasePriceRefunded($gwBasePriceRefunded)
    {
        $this->container['gwBasePriceRefunded'] = $gwBasePriceRefunded;

        return $this;
    }

    /**
     * Gets gwBaseTaxAmount
     * @return float
     */
    public function getGwBaseTaxAmount()
    {
        return $this->container['gwBaseTaxAmount'];
    }

    /**
     * Sets gwBaseTaxAmount
     * @param float $gwBaseTaxAmount GW base tax amount.
     * @return $this
     */
    public function setGwBaseTaxAmount($gwBaseTaxAmount)
    {
        $this->container['gwBaseTaxAmount'] = $gwBaseTaxAmount;

        return $this;
    }

    /**
     * Gets gwBaseTaxAmountInvoiced
     * @return float
     */
    public function getGwBaseTaxAmountInvoiced()
    {
        return $this->container['gwBaseTaxAmountInvoiced'];
    }

    /**
     * Sets gwBaseTaxAmountInvoiced
     * @param float $gwBaseTaxAmountInvoiced GW base tax amount invoiced.
     * @return $this
     */
    public function setGwBaseTaxAmountInvoiced($gwBaseTaxAmountInvoiced)
    {
        $this->container['gwBaseTaxAmountInvoiced'] = $gwBaseTaxAmountInvoiced;

        return $this;
    }

    /**
     * Gets gwBaseTaxAmountRefunded
     * @return float
     */
    public function getGwBaseTaxAmountRefunded()
    {
        return $this->container['gwBaseTaxAmountRefunded'];
    }

    /**
     * Sets gwBaseTaxAmountRefunded
     * @param float $gwBaseTaxAmountRefunded GW base tax amount refunded.
     * @return $this
     */
    public function setGwBaseTaxAmountRefunded($gwBaseTaxAmountRefunded)
    {
        $this->container['gwBaseTaxAmountRefunded'] = $gwBaseTaxAmountRefunded;

        return $this;
    }

    /**
     * Gets gwId
     * @return int
     */
    public function getGwId()
    {
        return $this->container['gwId'];
    }

    /**
     * Sets gwId
     * @param int $gwId GW ID.
     * @return $this
     */
    public function setGwId($gwId)
    {
        $this->container['gwId'] = $gwId;

        return $this;
    }

    /**
     * Gets gwPrice
     * @return float
     */
    public function getGwPrice()
    {
        return $this->container['gwPrice'];
    }

    /**
     * Sets gwPrice
     * @param float $gwPrice GW price.
     * @return $this
     */
    public function setGwPrice($gwPrice)
    {
        $this->container['gwPrice'] = $gwPrice;

        return $this;
    }

    /**
     * Gets gwPriceInvoiced
     * @return float
     */
    public function getGwPriceInvoiced()
    {
        return $this->container['gwPriceInvoiced'];
    }

    /**
     * Sets gwPriceInvoiced
     * @param float $gwPriceInvoiced GW price invoiced.
     * @return $this
     */
    public function setGwPriceInvoiced($gwPriceInvoiced)
    {
        $this->container['gwPriceInvoiced'] = $gwPriceInvoiced;

        return $this;
    }

    /**
     * Gets gwPriceRefunded
     * @return float
     */
    public function getGwPriceRefunded()
    {
        return $this->container['gwPriceRefunded'];
    }

    /**
     * Sets gwPriceRefunded
     * @param float $gwPriceRefunded GW price refunded.
     * @return $this
     */
    public function setGwPriceRefunded($gwPriceRefunded)
    {
        $this->container['gwPriceRefunded'] = $gwPriceRefunded;

        return $this;
    }

    /**
     * Gets gwTaxAmount
     * @return float
     */
    public function getGwTaxAmount()
    {
        return $this->container['gwTaxAmount'];
    }

    /**
     * Sets gwTaxAmount
     * @param float $gwTaxAmount GW tax amount.
     * @return $this
     */
    public function setGwTaxAmount($gwTaxAmount)
    {
        $this->container['gwTaxAmount'] = $gwTaxAmount;

        return $this;
    }

    /**
     * Gets gwTaxAmountInvoiced
     * @return float
     */
    public function getGwTaxAmountInvoiced()
    {
        return $this->container['gwTaxAmountInvoiced'];
    }

    /**
     * Sets gwTaxAmountInvoiced
     * @param float $gwTaxAmountInvoiced GW tax amount invoiced.
     * @return $this
     */
    public function setGwTaxAmountInvoiced($gwTaxAmountInvoiced)
    {
        $this->container['gwTaxAmountInvoiced'] = $gwTaxAmountInvoiced;

        return $this;
    }

    /**
     * Gets gwTaxAmountRefunded
     * @return float
     */
    public function getGwTaxAmountRefunded()
    {
        return $this->container['gwTaxAmountRefunded'];
    }

    /**
     * Sets gwTaxAmountRefunded
     * @param float $gwTaxAmountRefunded GW tax amount refunded.
     * @return $this
     */
    public function setGwTaxAmountRefunded($gwTaxAmountRefunded)
    {
        $this->container['gwTaxAmountRefunded'] = $gwTaxAmountRefunded;

        return $this;
    }

    /**
     * Gets discountTaxCompensationAmount
     * @return float
     */
    public function getDiscountTaxCompensationAmount()
    {
        return $this->container['discountTaxCompensationAmount'];
    }

    /**
     * Sets discountTaxCompensationAmount
     * @param float $discountTaxCompensationAmount Discount tax compensation amount.
     * @return $this
     */
    public function setDiscountTaxCompensationAmount($discountTaxCompensationAmount)
    {
        $this->container['discountTaxCompensationAmount'] = $discountTaxCompensationAmount;

        return $this;
    }

    /**
     * Gets discountTaxCompensationCanceled
     * @return float
     */
    public function getDiscountTaxCompensationCanceled()
    {
        return $this->container['discountTaxCompensationCanceled'];
    }

    /**
     * Sets discountTaxCompensationCanceled
     * @param float $discountTaxCompensationCanceled Discount tax compensation canceled.
     * @return $this
     */
    public function setDiscountTaxCompensationCanceled($discountTaxCompensationCanceled)
    {
        $this->container['discountTaxCompensationCanceled'] = $discountTaxCompensationCanceled;

        return $this;
    }

    /**
     * Gets discountTaxCompensationInvoiced
     * @return float
     */
    public function getDiscountTaxCompensationInvoiced()
    {
        return $this->container['discountTaxCompensationInvoiced'];
    }

    /**
     * Sets discountTaxCompensationInvoiced
     * @param float $discountTaxCompensationInvoiced Discount tax compensation invoiced.
     * @return $this
     */
    public function setDiscountTaxCompensationInvoiced($discountTaxCompensationInvoiced)
    {
        $this->container['discountTaxCompensationInvoiced'] = $discountTaxCompensationInvoiced;

        return $this;
    }

    /**
     * Gets discountTaxCompensationRefunded
     * @return float
     */
    public function getDiscountTaxCompensationRefunded()
    {
        return $this->container['discountTaxCompensationRefunded'];
    }

    /**
     * Sets discountTaxCompensationRefunded
     * @param float $discountTaxCompensationRefunded Discount tax compensation refunded.
     * @return $this
     */
    public function setDiscountTaxCompensationRefunded($discountTaxCompensationRefunded)
    {
        $this->container['discountTaxCompensationRefunded'] = $discountTaxCompensationRefunded;

        return $this;
    }

    /**
     * Gets isQtyDecimal
     * @return int
     */
    public function getIsQtyDecimal()
    {
        return $this->container['isQtyDecimal'];
    }

    /**
     * Sets isQtyDecimal
     * @param int $isQtyDecimal Is-quantity-decimal flag value.
     * @return $this
     */
    public function setIsQtyDecimal($isQtyDecimal)
    {
        $this->container['isQtyDecimal'] = $isQtyDecimal;

        return $this;
    }

    /**
     * Gets isVirtual
     * @return int
     */
    public function getIsVirtual()
    {
        return $this->container['isVirtual'];
    }

    /**
     * Sets isVirtual
     * @param int $isVirtual Is-virtual flag value.
     * @return $this
     */
    public function setIsVirtual($isVirtual)
    {
        $this->container['isVirtual'] = $isVirtual;

        return $this;
    }

    /**
     * Gets itemId
     * @return int
     */
    public function getItemId()
    {
        return $this->container['itemId'];
    }

    /**
     * Sets itemId
     * @param int $itemId Item ID.
     * @return $this
     */
    public function setItemId($itemId)
    {
        $this->container['itemId'] = $itemId;

        return $this;
    }

    /**
     * Gets lockedDoInvoice
     * @return int
     */
    public function getLockedDoInvoice()
    {
        return $this->container['lockedDoInvoice'];
    }

    /**
     * Sets lockedDoInvoice
     * @param int $lockedDoInvoice Locked DO invoice flag value.
     * @return $this
     */
    public function setLockedDoInvoice($lockedDoInvoice)
    {
        $this->container['lockedDoInvoice'] = $lockedDoInvoice;

        return $this;
    }

    /**
     * Gets lockedDoShip
     * @return int
     */
    public function getLockedDoShip()
    {
        return $this->container['lockedDoShip'];
    }

    /**
     * Sets lockedDoShip
     * @param int $lockedDoShip Locked DO ship flag value.
     * @return $this
     */
    public function setLockedDoShip($lockedDoShip)
    {
        $this->container['lockedDoShip'] = $lockedDoShip;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name Name.
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets noDiscount
     * @return int
     */
    public function getNoDiscount()
    {
        return $this->container['noDiscount'];
    }

    /**
     * Sets noDiscount
     * @param int $noDiscount No-discount flag value.
     * @return $this
     */
    public function setNoDiscount($noDiscount)
    {
        $this->container['noDiscount'] = $noDiscount;

        return $this;
    }

    /**
     * Gets orderId
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['orderId'];
    }

    /**
     * Sets orderId
     * @param int $orderId Order ID.
     * @return $this
     */
    public function setOrderId($orderId)
    {
        $this->container['orderId'] = $orderId;

        return $this;
    }

    /**
     * Gets originalPrice
     * @return float
     */
    public function getOriginalPrice()
    {
        return $this->container['originalPrice'];
    }

    /**
     * Sets originalPrice
     * @param float $originalPrice Original price.
     * @return $this
     */
    public function setOriginalPrice($originalPrice)
    {
        $this->container['originalPrice'] = $originalPrice;

        return $this;
    }

    /**
     * Gets parentItemId
     * @return int
     */
    public function getParentItemId()
    {
        return $this->container['parentItemId'];
    }

    /**
     * Sets parentItemId
     * @param int $parentItemId Parent item ID.
     * @return $this
     */
    public function setParentItemId($parentItemId)
    {
        $this->container['parentItemId'] = $parentItemId;

        return $this;
    }

    /**
     * Gets price
     * @return float
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     * @param float $price Price.
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceInclTax
     * @return float
     */
    public function getPriceInclTax()
    {
        return $this->container['priceInclTax'];
    }

    /**
     * Sets priceInclTax
     * @param float $priceInclTax Price including tax.
     * @return $this
     */
    public function setPriceInclTax($priceInclTax)
    {
        $this->container['priceInclTax'] = $priceInclTax;

        return $this;
    }

    /**
     * Gets productId
     * @return int
     */
    public function getProductId()
    {
        return $this->container['productId'];
    }

    /**
     * Sets productId
     * @param int $productId Product ID.
     * @return $this
     */
    public function setProductId($productId)
    {
        $this->container['productId'] = $productId;

        return $this;
    }

    /**
     * Gets productType
     * @return string
     */
    public function getProductType()
    {
        return $this->container['productType'];
    }

    /**
     * Sets productType
     * @param string $productType Product type.
     * @return $this
     */
    public function setProductType($productType)
    {
        $this->container['productType'] = $productType;

        return $this;
    }

    /**
     * Gets qtyBackordered
     * @return float
     */
    public function getQtyBackordered()
    {
        return $this->container['qtyBackordered'];
    }

    /**
     * Sets qtyBackordered
     * @param float $qtyBackordered Quantity backordered.
     * @return $this
     */
    public function setQtyBackordered($qtyBackordered)
    {
        $this->container['qtyBackordered'] = $qtyBackordered;

        return $this;
    }

    /**
     * Gets qtyCanceled
     * @return float
     */
    public function getQtyCanceled()
    {
        return $this->container['qtyCanceled'];
    }

    /**
     * Sets qtyCanceled
     * @param float $qtyCanceled Quantity canceled.
     * @return $this
     */
    public function setQtyCanceled($qtyCanceled)
    {
        $this->container['qtyCanceled'] = $qtyCanceled;

        return $this;
    }

    /**
     * Gets qtyInvoiced
     * @return float
     */
    public function getQtyInvoiced()
    {
        return $this->container['qtyInvoiced'];
    }

    /**
     * Sets qtyInvoiced
     * @param float $qtyInvoiced Quantity invoiced.
     * @return $this
     */
    public function setQtyInvoiced($qtyInvoiced)
    {
        $this->container['qtyInvoiced'] = $qtyInvoiced;

        return $this;
    }

    /**
     * Gets qtyOrdered
     * @return float
     */
    public function getQtyOrdered()
    {
        return $this->container['qtyOrdered'];
    }

    /**
     * Sets qtyOrdered
     * @param float $qtyOrdered Quantity ordered.
     * @return $this
     */
    public function setQtyOrdered($qtyOrdered)
    {
        $this->container['qtyOrdered'] = $qtyOrdered;

        return $this;
    }

    /**
     * Gets qtyRefunded
     * @return float
     */
    public function getQtyRefunded()
    {
        return $this->container['qtyRefunded'];
    }

    /**
     * Sets qtyRefunded
     * @param float $qtyRefunded Quantity refunded.
     * @return $this
     */
    public function setQtyRefunded($qtyRefunded)
    {
        $this->container['qtyRefunded'] = $qtyRefunded;

        return $this;
    }

    /**
     * Gets qtyReturned
     * @return float
     */
    public function getQtyReturned()
    {
        return $this->container['qtyReturned'];
    }

    /**
     * Sets qtyReturned
     * @param float $qtyReturned Quantity returned.
     * @return $this
     */
    public function setQtyReturned($qtyReturned)
    {
        $this->container['qtyReturned'] = $qtyReturned;

        return $this;
    }

    /**
     * Gets qtyShipped
     * @return float
     */
    public function getQtyShipped()
    {
        return $this->container['qtyShipped'];
    }

    /**
     * Sets qtyShipped
     * @param float $qtyShipped Quantity shipped.
     * @return $this
     */
    public function setQtyShipped($qtyShipped)
    {
        $this->container['qtyShipped'] = $qtyShipped;

        return $this;
    }

    /**
     * Gets quoteItemId
     * @return int
     */
    public function getQuoteItemId()
    {
        return $this->container['quoteItemId'];
    }

    /**
     * Sets quoteItemId
     * @param int $quoteItemId Quote item ID.
     * @return $this
     */
    public function setQuoteItemId($quoteItemId)
    {
        $this->container['quoteItemId'] = $quoteItemId;

        return $this;
    }

    /**
     * Gets rowInvoiced
     * @return float
     */
    public function getRowInvoiced()
    {
        return $this->container['rowInvoiced'];
    }

    /**
     * Sets rowInvoiced
     * @param float $rowInvoiced Row invoiced.
     * @return $this
     */
    public function setRowInvoiced($rowInvoiced)
    {
        $this->container['rowInvoiced'] = $rowInvoiced;

        return $this;
    }

    /**
     * Gets rowTotal
     * @return float
     */
    public function getRowTotal()
    {
        return $this->container['rowTotal'];
    }

    /**
     * Sets rowTotal
     * @param float $rowTotal Row total.
     * @return $this
     */
    public function setRowTotal($rowTotal)
    {
        $this->container['rowTotal'] = $rowTotal;

        return $this;
    }

    /**
     * Gets rowTotalInclTax
     * @return float
     */
    public function getRowTotalInclTax()
    {
        return $this->container['rowTotalInclTax'];
    }

    /**
     * Sets rowTotalInclTax
     * @param float $rowTotalInclTax Row total including tax.
     * @return $this
     */
    public function setRowTotalInclTax($rowTotalInclTax)
    {
        $this->container['rowTotalInclTax'] = $rowTotalInclTax;

        return $this;
    }

    /**
     * Gets rowWeight
     * @return float
     */
    public function getRowWeight()
    {
        return $this->container['rowWeight'];
    }

    /**
     * Sets rowWeight
     * @param float $rowWeight Row weight.
     * @return $this
     */
    public function setRowWeight($rowWeight)
    {
        $this->container['rowWeight'] = $rowWeight;

        return $this;
    }

    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     * @param string $sku SKU.
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets storeId
     * @return int
     */
    public function getStoreId()
    {
        return $this->container['storeId'];
    }

    /**
     * Sets storeId
     * @param int $storeId Store ID.
     * @return $this
     */
    public function setStoreId($storeId)
    {
        $this->container['storeId'] = $storeId;

        return $this;
    }

    /**
     * Gets taxAmount
     * @return float
     */
    public function getTaxAmount()
    {
        return $this->container['taxAmount'];
    }

    /**
     * Sets taxAmount
     * @param float $taxAmount Tax amount.
     * @return $this
     */
    public function setTaxAmount($taxAmount)
    {
        $this->container['taxAmount'] = $taxAmount;

        return $this;
    }

    /**
     * Gets taxBeforeDiscount
     * @return float
     */
    public function getTaxBeforeDiscount()
    {
        return $this->container['taxBeforeDiscount'];
    }

    /**
     * Sets taxBeforeDiscount
     * @param float $taxBeforeDiscount Tax before discount.
     * @return $this
     */
    public function setTaxBeforeDiscount($taxBeforeDiscount)
    {
        $this->container['taxBeforeDiscount'] = $taxBeforeDiscount;

        return $this;
    }

    /**
     * Gets taxCanceled
     * @return float
     */
    public function getTaxCanceled()
    {
        return $this->container['taxCanceled'];
    }

    /**
     * Sets taxCanceled
     * @param float $taxCanceled Tax canceled.
     * @return $this
     */
    public function setTaxCanceled($taxCanceled)
    {
        $this->container['taxCanceled'] = $taxCanceled;

        return $this;
    }

    /**
     * Gets taxInvoiced
     * @return float
     */
    public function getTaxInvoiced()
    {
        return $this->container['taxInvoiced'];
    }

    /**
     * Sets taxInvoiced
     * @param float $taxInvoiced Tax invoiced.
     * @return $this
     */
    public function setTaxInvoiced($taxInvoiced)
    {
        $this->container['taxInvoiced'] = $taxInvoiced;

        return $this;
    }

    /**
     * Gets taxPercent
     * @return float
     */
    public function getTaxPercent()
    {
        return $this->container['taxPercent'];
    }

    /**
     * Sets taxPercent
     * @param float $taxPercent Tax percent.
     * @return $this
     */
    public function setTaxPercent($taxPercent)
    {
        $this->container['taxPercent'] = $taxPercent;

        return $this;
    }

    /**
     * Gets taxRefunded
     * @return float
     */
    public function getTaxRefunded()
    {
        return $this->container['taxRefunded'];
    }

    /**
     * Sets taxRefunded
     * @param float $taxRefunded Tax refunded.
     * @return $this
     */
    public function setTaxRefunded($taxRefunded)
    {
        $this->container['taxRefunded'] = $taxRefunded;

        return $this;
    }

    /**
     * Gets updatedAt
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updatedAt'];
    }

    /**
     * Sets updatedAt
     * @param string $updatedAt Updated-at timestamp.
     * @return $this
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->container['updatedAt'] = $updatedAt;

        return $this;
    }

    /**
     * Gets weeeTaxApplied
     * @return string
     */
    public function getWeeeTaxApplied()
    {
        return $this->container['weeeTaxApplied'];
    }

    /**
     * Sets weeeTaxApplied
     * @param string $weeeTaxApplied WEEE tax applied.
     * @return $this
     */
    public function setWeeeTaxApplied($weeeTaxApplied)
    {
        $this->container['weeeTaxApplied'] = $weeeTaxApplied;

        return $this;
    }

    /**
     * Gets weeeTaxAppliedAmount
     * @return float
     */
    public function getWeeeTaxAppliedAmount()
    {
        return $this->container['weeeTaxAppliedAmount'];
    }

    /**
     * Sets weeeTaxAppliedAmount
     * @param float $weeeTaxAppliedAmount WEEE tax applied amount.
     * @return $this
     */
    public function setWeeeTaxAppliedAmount($weeeTaxAppliedAmount)
    {
        $this->container['weeeTaxAppliedAmount'] = $weeeTaxAppliedAmount;

        return $this;
    }

    /**
     * Gets weeeTaxAppliedRowAmount
     * @return float
     */
    public function getWeeeTaxAppliedRowAmount()
    {
        return $this->container['weeeTaxAppliedRowAmount'];
    }

    /**
     * Sets weeeTaxAppliedRowAmount
     * @param float $weeeTaxAppliedRowAmount WEEE tax applied row amount.
     * @return $this
     */
    public function setWeeeTaxAppliedRowAmount($weeeTaxAppliedRowAmount)
    {
        $this->container['weeeTaxAppliedRowAmount'] = $weeeTaxAppliedRowAmount;

        return $this;
    }

    /**
     * Gets weeeTaxDisposition
     * @return float
     */
    public function getWeeeTaxDisposition()
    {
        return $this->container['weeeTaxDisposition'];
    }

    /**
     * Sets weeeTaxDisposition
     * @param float $weeeTaxDisposition WEEE tax disposition.
     * @return $this
     */
    public function setWeeeTaxDisposition($weeeTaxDisposition)
    {
        $this->container['weeeTaxDisposition'] = $weeeTaxDisposition;

        return $this;
    }

    /**
     * Gets weeeTaxRowDisposition
     * @return float
     */
    public function getWeeeTaxRowDisposition()
    {
        return $this->container['weeeTaxRowDisposition'];
    }

    /**
     * Sets weeeTaxRowDisposition
     * @param float $weeeTaxRowDisposition WEEE tax row disposition.
     * @return $this
     */
    public function setWeeeTaxRowDisposition($weeeTaxRowDisposition)
    {
        $this->container['weeeTaxRowDisposition'] = $weeeTaxRowDisposition;

        return $this;
    }

    /**
     * Gets weight
     * @return float
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     * @param float $weight Weight.
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets parentItem
     * @return \TheCodeBunny\Magento2Api\Model\SalesDataOrderItemInterface
     */
    public function getParentItem()
    {
        return $this->container['parentItem'];
    }

    /**
     * Sets parentItem
     * @param \TheCodeBunny\Magento2Api\Model\SalesDataOrderItemInterface $parentItem
     * @return $this
     */
    public function setParentItem($parentItem)
    {
        $this->container['parentItem'] = $parentItem;

        return $this;
    }

    /**
     * Gets productOption
     * @return \TheCodeBunny\Magento2Api\Model\CatalogDataProductOptionInterface
     */
    public function getProductOption()
    {
        return $this->container['productOption'];
    }

    /**
     * Sets productOption
     * @param \TheCodeBunny\Magento2Api\Model\CatalogDataProductOptionInterface $productOption
     * @return $this
     */
    public function setProductOption($productOption)
    {
        $this->container['productOption'] = $productOption;

        return $this;
    }

    /**
     * Gets extensionAttributes
     * @return \TheCodeBunny\Magento2Api\Model\SalesDataOrderItemExtensionInterface
     */
    public function getExtensionAttributes()
    {
        return $this->container['extensionAttributes'];
    }

    /**
     * Sets extensionAttributes
     * @param \TheCodeBunny\Magento2Api\Model\SalesDataOrderItemExtensionInterface $extensionAttributes
     * @return $this
     */
    public function setExtensionAttributes($extensionAttributes)
    {
        $this->container['extensionAttributes'] = $extensionAttributes;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\TheCodeBunny\Magento2Api\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\TheCodeBunny\Magento2Api\ObjectSerializer::sanitizeForSerialization($this));
    }
}


