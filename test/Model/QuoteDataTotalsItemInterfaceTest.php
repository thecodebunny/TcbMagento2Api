<?php
/**
 * QuoteDataTotalsItemInterfaceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  TheCodeBunny\Swagger\Magento2\Client
 * @author   Hemang Vyas (TheCodeBunny)
 * @link     https://github.com/thecodebunny/TcbMagento2Api.git
 */

/**
 * Magento Enterprise
 *
 * No description provided (generated by Swagger Codegen https://github.com/thecodebunny/TcbMagento2Api.git)
 *
 * OpenAPI spec version: 2.1
 * 
 * Generated by: https://github.com/thecodebunny/TcbMagento2Api.git.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/thecodebunny/TcbMagento2Api.git
 * Please update the test case below to test the model.
 */

namespace TheCodeBunny\Swagger\Magento2\Client;

/**
 * QuoteDataTotalsItemInterfaceTest Class Doc Comment
 *
 * @category    Class */
// * @description Interface TotalsItemInterface
/**
 * @package     TheCodeBunny\Swagger\Magento2\Client
 * @author      Hemang Vyas (TheCodeBunny)
 * @link        https://github.com/thecodebunny/TcbMagento2Api.git
 */
class QuoteDataTotalsItemInterfaceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test "QuoteDataTotalsItemInterface"
     */
    public function testQuoteDataTotalsItemInterface()
    {

    }

    /**
     * Test attribute "itemId"
     */
    public function testPropertyItemId()
    {

    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {

    }

    /**
     * Test attribute "basePrice"
     */
    public function testPropertyBasePrice()
    {

    }

    /**
     * Test attribute "qty"
     */
    public function testPropertyQty()
    {

    }

    /**
     * Test attribute "rowTotal"
     */
    public function testPropertyRowTotal()
    {

    }

    /**
     * Test attribute "baseRowTotal"
     */
    public function testPropertyBaseRowTotal()
    {

    }

    /**
     * Test attribute "rowTotalWithDiscount"
     */
    public function testPropertyRowTotalWithDiscount()
    {

    }

    /**
     * Test attribute "taxAmount"
     */
    public function testPropertyTaxAmount()
    {

    }

    /**
     * Test attribute "baseTaxAmount"
     */
    public function testPropertyBaseTaxAmount()
    {

    }

    /**
     * Test attribute "taxPercent"
     */
    public function testPropertyTaxPercent()
    {

    }

    /**
     * Test attribute "discountAmount"
     */
    public function testPropertyDiscountAmount()
    {

    }

    /**
     * Test attribute "baseDiscountAmount"
     */
    public function testPropertyBaseDiscountAmount()
    {

    }

    /**
     * Test attribute "discountPercent"
     */
    public function testPropertyDiscountPercent()
    {

    }

    /**
     * Test attribute "priceInclTax"
     */
    public function testPropertyPriceInclTax()
    {

    }

    /**
     * Test attribute "basePriceInclTax"
     */
    public function testPropertyBasePriceInclTax()
    {

    }

    /**
     * Test attribute "rowTotalInclTax"
     */
    public function testPropertyRowTotalInclTax()
    {

    }

    /**
     * Test attribute "baseRowTotalInclTax"
     */
    public function testPropertyBaseRowTotalInclTax()
    {

    }

    /**
     * Test attribute "options"
     */
    public function testPropertyOptions()
    {

    }

    /**
     * Test attribute "weeeTaxAppliedAmount"
     */
    public function testPropertyWeeeTaxAppliedAmount()
    {

    }

    /**
     * Test attribute "weeeTaxApplied"
     */
    public function testPropertyWeeeTaxApplied()
    {

    }

    /**
     * Test attribute "extensionAttributes"
     */
    public function testPropertyExtensionAttributes()
    {

    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {

    }

}
